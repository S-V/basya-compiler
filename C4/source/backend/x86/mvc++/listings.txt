
Listings, generated by MVC++ 8.0 without any optimizations:

 a = 3 / (b - 1 + 2 * b + c * d) / (e + f);
8B 45 F8             mov         eax,dword ptr [ebp-8]
8B 4D F8             mov         ecx,dword ptr [ebp-8]
8D 4C 41 FF          lea         ecx,[ecx+eax*2-1]
8B 55 F4             mov         edx,dword ptr [ebp-0Ch]
0F AF 55 F0          imul        edx,dword ptr [ebp-10h]
03 CA                add         ecx,edx
B8 03 00 00 00       mov         eax,3
99                   cdq
F7 F9                idiv        eax,ecx
8B 4D EC             mov         ecx,dword ptr [ebp-14h]
03 4D E8             add         ecx,dword ptr [ebp-18h]
99                   cdq
F7 F9                idiv        eax,ecx
89 45 FC             mov         dword ptr [ebp-4],eax
	( 14 )

 a = e/5 + c/3/2;
8B 45 EC             mov         eax,dword ptr [ebp-14h]
99                   cdq
B9 05 00 00 00       mov         ecx,5
F7 F9                idiv        eax,ecx
8B C8                mov         ecx,eax
8B 45 F4             mov         eax,dword ptr [ebp-0Ch]
99                   cdq
BE 03 00 00 00       mov         esi,3
F7 FE                idiv        eax,esi
99                   cdq
2B C2                sub         eax,edx
D1 F8                sar         eax,1
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx
	( 14 )

//===============================================================
 a = a/b + 2/a/b;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
B8 02 00 00 00       mov         eax,2
99                   cdq
F7 7D FC             idiv        eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = a/b + 2/(a/b);
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B F0                mov         esi,eax
B8 02 00 00 00       mov         eax,2
99                   cdq
F7 FE                idiv        eax,esi
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx
	( 13 )
	
 a = 2/(a/b) + a/b;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
B8 02 00 00 00       mov         eax,2
99                   cdq
F7 F9                idiv        eax,ecx
8B C8                mov         ecx,eax
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx
	( 13 )

	LCC 4.2 :
	
	a = 2/(a/b) + a/b;
	
	mov eax,dword ptr (-4)[ebp]
	mov edi,dword ptr (-8)[ebp]
	cdq
	idiv edi
	mov edi,eax
	mov eax,2
	cdq
	idiv edi
	lea edi,[edi][eax]
	mov dword ptr (-4)[ebp],edi	
	( 10 )

// my stuff:
a = 2/(a/b) + a/b;
	mov		eax, dword ptr [a]
	cdq
	idiv	dword ptr [b]
	mov		ecx, eax			; ecx = a / b
	mov		eax, 2
	cdq
	idiv	ecx					; eax = 2/(a/b)
	add		eax, ecx			; eax = 2/(a/b) + a/b
	
	( or lea eax, [eax + ecx] )
	
	mov		dword ptr [a], eax
	( 9 )
//===============================================================


 a = a/b + c/3;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
8B 45 F4             mov         eax,dword ptr [ebp-0Ch]
99                   cdq
BE 03 00 00 00       mov         esi,3
F7 FE                idiv        eax,esi
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx


//===============================================================
     a = c - 29/a;
B8 1D 00 00 00       mov         eax,1Dh
99                   cdq
F7 7D FC             idiv        eax,dword ptr [ebp-4]
8B 4D F4             mov         ecx,dword ptr [ebp-0Ch]
2B C8                sub         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = - 29/a + c;
B8 E3 FF FF FF       mov         eax,0FFFFFFE3h
99                   cdq
F7 7D FC             idiv        eax,dword ptr [ebp-4]
03 45 F4             add         eax,dword ptr [ebp-0Ch]
89 45 FC             mov         dword ptr [ebp-4],eax
//===============================================================


 a = 2*a+b + a/b;
8B 45 FC             mov         eax,dword ptr [ebp-4]
8B 4D F8             mov         ecx,dword ptr [ebp-8]
8D 0C 41             lea         ecx,[ecx+eax*2]
8B 45 FC             mov         eax,dword ptr [ebp-4]		; !!!; a is already in EAX
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = 99*a+b + a/b;
8B 4D FC             mov         ecx,dword ptr [ebp-4]
6B C9 63             imul        ecx,ecx,63h
03 4D F8             add         ecx,dword ptr [ebp-8]
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = a*8+b + a/b;
8B 45 FC             mov         eax,dword ptr [ebp-4]
8B 4D F8             mov         ecx,dword ptr [ebp-8]
8D 0C C1             lea         ecx,[ecx+eax*8]
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = a*7+b + a/b;
8B 4D FC             mov         ecx,dword ptr [ebp-4]
6B C9 07             imul        ecx,ecx,7
03 4D F8             add         ecx,dword ptr [ebp-8]
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
03 C8                add         ecx,eax
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = a/b/c;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
99                   cdq
F7 7D F4             idiv        eax,dword ptr [ebp-0Ch]
89 45 FC             mov         dword ptr [ebp-4],eax

 a = a/(b/(c/d));
8B 45 F4             mov         eax,dword ptr [ebp-0Ch]
99                   cdq
F7 7D F0             idiv        eax,dword ptr [ebp-10h]
8B C8                mov         ecx,eax
8B 45 F8             mov         eax,dword ptr [ebp-8]
99                   cdq
F7 F9                idiv        eax,ecx
8B C8                mov         ecx,eax
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 F9                idiv        eax,ecx
89 45 FC             mov         dword ptr [ebp-4],eax
	( 12 )


 a = 7 / (a / b) + a*b*c + 2*a + b + 1;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
B8 07 00 00 00       mov         eax,7
99                   cdq
F7 F9                idiv        eax,ecx
8B 55 FC             mov         edx,dword ptr [ebp-4]
0F AF 55 F8          imul        edx,dword ptr [ebp-8]
0F AF 55 F4          imul        edx,dword ptr [ebp-0Ch]
03 55 F8             add         edx,dword ptr [ebp-8]
03 D0                add         edx,eax
8B 45 FC             mov         eax,dword ptr [ebp-4]
8D 4C 42 01          lea         ecx,[edx+eax*2+1]
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = 7 / (a / b) + a*b*c + 1 + b + 2*a + 1;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F8             idiv        eax,dword ptr [ebp-8]
8B C8                mov         ecx,eax
B8 07 00 00 00       mov         eax,7
99                   cdq
F7 F9                idiv        eax,ecx
8B 55 FC             mov         edx,dword ptr [ebp-4]
0F AF 55 F8          imul        edx,dword ptr [ebp-8]
0F AF 55 F4          imul        edx,dword ptr [ebp-0Ch]
8B 4D F8             mov         ecx,dword ptr [ebp-8]
03 C8                add         ecx,eax
8D 54 0A 01          lea         edx,[edx+ecx+1]
8B 45 FC             mov         eax,dword ptr [ebp-4]
8D 4C 42 01          lea         ecx,[edx+eax*2+1]
89 4D FC             mov         dword ptr [ebp-4],ecx

 a = a + b + 5;
8B 45 F8             mov         eax,dword ptr [ebp-8]
8B 4D FC             mov         ecx,dword ptr [ebp-4]
8D 54 01 05          lea         edx,[ecx+eax+5]
89 55 FC             mov         dword ptr [ebp-4],edx

 a = a % c + b;
8B 45 FC             mov         eax,dword ptr [ebp-4]
99                   cdq
F7 7D F4             idiv        eax,dword ptr [ebp-0Ch]
03 55 F8             add         edx,dword ptr [ebp-8]
89 55 FC             mov         dword ptr [ebp-4],edx

; short = long int
66 8B 4D CC          mov         cx,word ptr [ebp-34h]
66 89 4D C8          mov         word ptr [ebp-38h],cx

; int = float;
D9 45 F0             fld         dword ptr [ebp-10h]
E8 1D 00 00 00       call        __ftol (004041c0)
89 45 FC             mov         dword ptr [ebp-4],eax

; float = int
DB 45 FC             fild        dword ptr [ebp-4]
D9 5D F0             fstp        dword ptr [ebp-10h]

; LCC 4.2: float = int
mov edi,dword ptr (-4)[ebp]
push edi
fild dword ptr 0[esp]
add esp,4
fstp dword ptr (-8)[ebp]


	char c1, c2, c3;
	unsigned char c4;
	int i1, i2, i3;

	c3 = c1;
 8A 45 FF         mov         al,byte ptr [c1] 
 88 45 FD         mov         byte ptr [c3],al 
	c3 = c1 + c2;
 0F BE 45 FF      movsx       eax,byte ptr [c1] 
 0F BE 4D FE      movsx       ecx,byte ptr [c2] 
 03 C1            add         eax,ecx 
 88 45 FD         mov         byte ptr [c3],al 
	i3 = i1 + i2;
 8B 45 F8         mov         eax,dword ptr [i1] 
 03 45 F4         add         eax,dword ptr [i2] 
 89 45 F0         mov         dword ptr [i3],eax 
	i3 = c1;
 0F BE 45 FF      movsx       eax,byte ptr [c1] 
 89 45 F0         mov         dword ptr [i3],eax 
	i3 = c4;
 0F B6 45 FC      movzx       eax,byte ptr [c4] 
 89 45 F0         mov         dword ptr [i3],eax 


	char c1, c2, c3;
	bool b;
	unsigned char c4;
	int i1, i2, i3;

	c3 = c1;
 8A 45 FF         mov         al,byte ptr [c1] 
 88 45 FD         mov         byte ptr [c3],al 
	b = c1;
 80 7D FF 00      cmp         byte ptr [c1],0 
 0F 95 C0         setne       al   
 88 45 FC         mov         byte ptr [b],al 
	c3 = c1 + c2;
 0F BE 45 FF      movsx       eax,byte ptr [c1] 
 0F BE 4D FE      movsx       ecx,byte ptr [c2] 
 03 C1            add         eax,ecx 
 88 45 FD         mov         byte ptr [c3],al 
	i3 = i1 + i2;
 8B 45 F4         mov         eax,dword ptr [i1]
 03 45 F0         add         eax,dword ptr [i2]
 89 45 EC         mov         dword ptr [i3],eax
	i3 = c1;
 0F BE 45 FF      movsx       eax,byte ptr [c1] 
 89 45 EC         mov         dword ptr [i3],eax
	i3 = c4;
 0F B6 45 FB      movzx       eax,byte ptr [c4] 
 89 45 EC         mov         dword ptr [i3],eax
	c1 = i1;
 8A 45 F4         mov         al,byte ptr [i1] 
 88 45 FF         mov         byte ptr [c1],al 

	c1 = a / 4;
 8B 45 E8         mov         eax,dword ptr [a] 
 99               cdq              
 83 E2 03         and         edx,3 
 03 C2            add         eax,edx 
 C1 F8 02         sar         eax,2 
 88 45 FF         mov         byte ptr [c1],al 

	c1 = a / 7;
 8B 45 E8         mov         eax,dword ptr [a] 
 99               cdq              
 B9 07 00 00 00   mov         ecx,7 
 F7 F9            idiv        eax,ecx 
 88 45 FF         mov         byte ptr [c1],al 

	a = m * 2 + 99*m;
 8B 45 E0         mov         eax,dword ptr [m] 
 6B C0 63         imul        eax,eax,63h 
 8B 4D E0         mov         ecx,dword ptr [m] 
 8D 14 48         lea         edx,[eax+ecx*2] 
 89 55 E8         mov         dword ptr [a],edx 

	c1 = a / 2;
 8B 45 E8         mov         eax,dword ptr [a]
 99               cdq              
 2B C2            sub         eax,edx 
 D1 F8            sar         eax,1 
 88 45 FF         mov         byte ptr [c1],al 

	c1 = a / 4;
 8B 45 E8         mov         eax,dword ptr [a]
 99               cdq              
 83 E2 03         and         edx,3 
 03 C2            add         eax,edx 
 C1 F8 02         sar         eax,2 
 88 45 FF         mov         byte ptr [c1],al 

	c1 = a / 8;
 8B 45 E8         mov         eax,dword ptr [a] 
 99               cdq              
 83 E2 07         and         edx,7 
 03 C2            add         eax,edx 
 C1 F8 03         sar         eax,3 
 88 45 FF         mov         byte ptr [c1],al 
 
	c1 = a / 32;
 8B 45 E8         mov         eax,dword ptr [a]
 99               cdq              
 83 E2 1F         and         edx,1Fh 
 03 C2            add         eax,edx 
 C1 F8 05         sar         eax,5 
 88 45 FF         mov         byte ptr [c1],al 
 
	a = a*2 + b + 9;

 8B 45 FC         mov         eax,dword ptr [a] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 54 41 09      lea         edx,[ecx+eax*2+9] 
 89 55 FC         mov         dword ptr [a],edx 

	a = b - 1 + 2 * c;
 8B 45 F4         mov         eax,dword ptr [c] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 54 41 FF      lea         edx,[ecx+eax*2-1] 
 89 55 FC         mov         dword ptr [a],edx 

//---------------------------------------------------
	b = 3;
 C7 45 F8 03 00 00 00 mov         dword ptr [b],3 
	a = 2 * b + 6;
 8B 45 F8         mov         eax,dword ptr [b] 
 8D 4C 00 06      lea         ecx,[eax+eax+6] 
 89 4D FC         mov         dword ptr [a],ecx 

//---------------------------------------------------
	b = 3;
 C7 45 F8 03 00 00 00 mov         dword ptr [b],3 
//	a = 2 * b + 6;
	_asm {
		mov eax, dword ptr [b]
 8B 45 F8         mov         eax,dword ptr [b] 
		lea eax, [eax*2 + 6]
 8D 04 45 06 00 00 00 lea         eax,[eax*2+6] 
		mov dword ptr [a], eax
 89 45 FC         mov         dword ptr [a],eax 
	}

	printf( "a = %d\n", a );
 8B 45 FC         mov         eax,dword ptr [a] 
 50               push        eax  
 68 BC 61 41 00   push        offset string "a = %d\n" (4161BCh) 
 E8 0C 00 00 00   call        printf (40103Ah) 
 83 C4 08         add         esp,8 

//---------------------------------------------------
	b = 3, c = 0;
 C7 45 F8 03 00 00 00 mov         dword ptr [b],3 
 C7 45 F4 00 00 00 00 mov         dword ptr [c],0 

	a = b + c + 6;
 8B 45 F4         mov         eax,dword ptr [c] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 54 01 06      lea         edx,[ecx+eax+6] 
 89 55 FC         mov         dword ptr [a],edx 
//---------------------------------------------------
	a = (b + c + 6)/4;
 8B 45 F4         mov         eax,dword ptr [c] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 44 01 06      lea         eax,[ecx+eax+6] 
 99               cdq              
 83 E2 03         and         edx,3 
 03 C2            add         eax,edx 
 C1 F8 02         sar         eax,2 
 89 45 FC         mov         dword ptr [a],eax 
 //---------------------------------------------------
	a = (b + c + 6)/7;
 8B 45 F4         mov         eax,dword ptr [c] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 44 01 06      lea         eax,[ecx+eax+6] 
 99               cdq              
 B9 07 00 00 00   mov         ecx,7 
 F7 F9            idiv        eax,ecx 
 89 45 FC         mov         dword ptr [a],eax 
//---------------------------------------------------
	a = a*2 + a / 7;
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 B9 07 00 00 00   mov         ecx,7 
 F7 F9            idiv        eax,ecx 
 8B 55 FC         mov         edx,dword ptr [a] 
 8D 04 50         lea         eax,[eax+edx*2] 
 89 45 FC         mov         dword ptr [a],eax 
//---------------------------------------------------
	a = 7 % 10 + 7 / (a / 3);
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 B9 03 00 00 00   mov         ecx,3 
 F7 F9            idiv        eax,ecx 
 8B C8            mov         ecx,eax 
 B8 07 00 00 00   mov         eax,7 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 83 C0 07         add         eax,7 
 89 45 FC         mov         dword ptr [a],eax 
//---------------------------------------------------
	a = b % 10 + 7 / (a % 3);
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 B9 0A 00 00 00   mov         ecx,0Ah 
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 B8 07 00 00 00   mov         eax,7 
 99               cdq              
 F7 FE            idiv        eax,esi 
 03 C8            add         ecx,eax 
 89 4D FC         mov         dword ptr [a],ecx 

//---------------------------------------------------
( LCC )

a = (b + c)*2*7 + (b + c)%3;

mov edi,dword ptr (-4)[ebp]
mov esi,dword ptr (-8)[ebp]
lea edi,[esi][edi]
lea esi,[edi*2]
imul esi,esi,7
mov eax,edi
mov edi,3
cdq
idiv edi
lea edi,[edx][esi]
mov dword ptr (-12)[ebp],edi
//---------------------------------------------------
	a = (b + c)*2*7 + (b + c)%3;	
 8B 4D F8         mov         ecx,dword ptr [b] 
 03 4D F4         add         ecx,dword ptr [c] 
 D1 E1            shl         ecx,1 
 6B C9 07         imul        ecx,ecx,7 
 8B 45 F8         mov         eax,dword ptr [b] 
 03 45 F4         add         eax,dword ptr [c] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 03 CA            add         ecx,edx 
 89 4D FC         mov         dword ptr [a],ecx 
//---------------------------------------------------
	a = (b + c)*19*2 + (b + c)%3;	
 8B 4D F8         mov         ecx,dword ptr [b] 
 03 4D F4         add         ecx,dword ptr [c] 
 6B C9 13         imul        ecx,ecx,13h 
 8B 45 F8         mov         eax,dword ptr [b] 
 03 45 F4         add         eax,dword ptr [c] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8D 14 4A         lea         edx,[edx+ecx*2] 
 89 55 FC         mov         dword ptr [a],edx 
//---------------------------------------------------
( MVC: )
	a = (b + c)*38 + (b + c)%3;	
 8B 4D F8         mov         ecx,dword ptr [b] 
 03 4D F4         add         ecx,dword ptr [c] 
 6B C9 26         imul        ecx,ecx,26h 
 8B 45 F8         mov         eax,dword ptr [b] 
 03 45 F4         add         eax,dword ptr [c] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 03 CA            add         ecx,edx 
 89 4D FC         mov         dword ptr [a],ecx 
 
	( 10 instructions )
//---------------------------------------------------
 ( C4: )
	a = (b + c)*38 + (b + c)%3;
	
	mov eax, dword ptr [b]
	add eax, dword ptr [c]
	mov ecx, 3
	cdq
	idiv ecx
	mov eax, dword ptr [b]
	add eax, dword ptr [c]
	imul eax, eax, 38
	add edx, eax
	mov dword ptr [a], edx
	
	( 10 instructions )
//---------------------------------------------------
( LCC 4.2: )
	a = (b + c)*38 + (b + c)%3;
	
	mov edi,dword ptr (-4)[ebp]
	mov esi,dword ptr (-8)[ebp]
	lea edi,[esi][edi]
	imul esi,edi,38
	mov eax,edi
	mov edi,3
	cdq
	idiv edi
	lea edi,[edx][esi]
	mov dword ptr (-12)[ebp],edi
	( 10 instructions )
//---------------------------------------------------

; hand-written
	a = (b + c)*38 + (b + c)%3;	
; my code:
mov		eax, dword ptr [b]
add		eax, dword ptr [c]	; eax = b + c
imul	ecx, eax, 38		; ecx = (b + c)*38
cdq							; edx:eax = b + c
mov		esi, 3
idiv	esi					; edx = (b + c)%3
add		ecx, edx			; ecx = (b + c)*38 + (b + c)%3;
mov		dword ptr [a], ecx	;	

	( 8 instructions )
//---------------------------------------------------
a = (b + c)*38 + (b + c)%3;	
; my code:
mov		eax, dword ptr [b]
add		eax, dword ptr [c]
imul	ecx, eax, 38		; ecx = (b + c)*38
cdq
mov		esi, 3
idiv	esi					; edx = (b + c)%3
lea		eax, [ecx + edx]	; eax = (b + c)*38 + (b + c)%3;	
mov		dword ptr [a], eax

	( 8 instructions, but better that the previous )
//---------------------------------------------------

Optimization:

int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;

a*(b*c)+(b*a)*d+a*e -> (a*b)*(c+d)+a*e -> a*(b*(c+d)+e)

	i = a*(b*c)+(b*a)*d+a*e;
 8B 45 F8         mov         eax,dword ptr [b] 
 0F AF 45 F4      imul        eax,dword ptr [c] 
 0F AF 45 FC      imul        eax,dword ptr [a] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 0F AF 4D FC      imul        ecx,dword ptr [a] 
 0F AF 4D F0      imul        ecx,dword ptr [d] 
 03 C1            add         eax,ecx 
 8B 55 FC         mov         edx,dword ptr [a] 
 0F AF 55 EC      imul        edx,dword ptr [e] 
 03 C2            add         eax,edx 
 89 45 DC         mov         dword ptr [i],eax 

	i = a*(b*(c+d)+e);
 8B 45 F4         mov         eax,dword ptr [c] 
 03 45 F0         add         eax,dword ptr [d] 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 03 45 EC         add         eax,dword ptr [e] 
 0F AF 45 FC      imul        eax,dword ptr [a] 
 89 45 DC         mov         dword ptr [i],eax 

//---------------------------------------------------
	i = 1 / ((7/a) % (b/c));
 B8 07 00 00 00   mov         eax,7 
 99               cdq              
 F7 7D FC         idiv        eax,dword ptr [a] 
 8B C8            mov         ecx,eax 
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 F7 7D F4         idiv        eax,dword ptr [c] 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B CA            mov         ecx,edx 
 B8 01 00 00 00   mov         eax,1 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 DC         mov         dword ptr [i],eax 
//---------------------------------------------------

C4 compiler:

	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	
	i = b % 10 + 7 / (a % 3) * 8 + 99;

		mov		eax, dword ptr [a]
		mov		ecx, 3
		cdq
		idiv	ecx
		mov		eax, 7
		mov		ecx, edx
		cdq
		idiv	ecx
		mov		ecx, eax
		mov		eax, dword ptr [b]
		mov		edx, 10
		mov		esi, edx
		cdq
		idiv	esi
		lea		eax, [edx + ecx*8 +99]
		mov		dword ptr [i], eax

//---------------------------------------------------
( MVC: )
	i = b % 10 + 7 / (a % 3) * 8 + 99;
	
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 B9 0A 00 00 00   mov         ecx,0Ah 
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 B8 07 00 00 00   mov         eax,7 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8D 54 C1 63      lea         edx,[ecx+eax*8+63h] 
 89 55 DC         mov         dword ptr [i],edx 

//---------------------------------------------------
( LCC 4.2 )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
    
    i = b % 10 + 7 / (a % 3) * 8 + 99;

	mov edi,3
	mov eax,dword ptr (-8)[ebp]
	mov esi,10
	cdq
	idiv esi
	mov dword ptr (-16)[ebp],edx
	mov eax,7
	mov dword ptr (-20)[ebp],eax
	mov eax,dword ptr (-4)[ebp]
	cdq
	idiv edi
	mov dword ptr (-24)[ebp],edx
	mov eax,dword ptr (-20)[ebp]
	mov edi,dword ptr (-24)[ebp]
	cdq
	idiv edi
	lea edi,[eax*8]
	mov esi,dword ptr (-16)[ebp]
	lea edi,[edi][esi]
	lea edi,(99)[edi]
	mov dword ptr (-12)[ebp],edi

a = 3 / (b - 1 + 2 * b + c * d) / (e + f);

	mov edi,dword ptr (-4)[ebp]
	mov eax,3
	mov esi,edi
	sub esi,1
	lea edi,[edi*2]
	lea edi,[edi][esi]
	mov esi,dword ptr (-12)[ebp]
	mov ebx,dword ptr (-16)[ebp]
	imul esi,ebx
	lea edi,[esi][edi]
	cdq
	idiv edi
	mov edi,dword ptr (-20)[ebp]
	mov esi,dword ptr (-24)[ebp]
	lea edi,[esi][edi]
	cdq
	idiv edi
	mov dword ptr (-8)[ebp],eax

======================================================

( LCC 4.2 )

	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
    char c1, c2, c3;
    
    a = c1 == 7 ? 
            3 / (b-1*22* b + c * d) / (e + f)
            :
            (2 + b + a + b)/(3%h)<<(2|a&b);


	movsx edi,byte ptr (-32)[ebp]
	cmp edi,7
	jne L3
	mov edi,dword ptr (-4)[ebp]
	mov eax,3
	imul esi,edi,22
	sub edi,esi
	mov esi,dword ptr (-12)[ebp]
	mov ebx,dword ptr (-16)[ebp]
	imul esi,ebx
	lea edi,[esi][edi]
	cdq
	idiv edi
	mov edi,dword ptr (-20)[ebp]
	mov esi,dword ptr (-24)[ebp]
	lea edi,[esi][edi]
	cdq
	idiv edi
	mov dword ptr (-36)[ebp],eax
	jmp L4
	L3:
	mov edi,dword ptr (-4)[ebp]
	mov esi,dword ptr (-8)[ebp]
	lea ebx,(2)[edi]
	lea ebx,[esi][ebx]
	lea eax,[edi][ebx]
	mov dword ptr (-40)[ebp],eax
	mov eax,3
	mov ebx,dword ptr (-28)[ebp]
	cdq
	idiv ebx
	mov dword ptr (-44)[ebp],edx
	mov eax,dword ptr (-40)[ebp]
	mov ebx,dword ptr (-44)[ebp]
	cdq
	idiv ebx
	and esi,edi
	mov edi,esi
	or edi,2
	mov esi,eax
	mov ecx,edi
	sal esi,cl
	mov dword ptr (-36)[ebp],esi
	L4:
	mov edi,dword ptr (-36)[ebp]
	mov dword ptr (-8)[ebp],edi

//==========================================
(MVC)
	i = c % 5 % 3 + 3;
 8B 45 F4         mov         eax,dword ptr [c] 
 99               cdq              
 B9 05 00 00 00   mov         ecx,5 
 F7 F9            idiv        eax,ecx 
 8B C2            mov         eax,edx 
 99               cdq              
 B9 03 00 00 00   mov         ecx,3 
 F7 F9            idiv        eax,ecx 
 83 C2 03         add         edx,3 
 89 55 DC         mov         dword ptr [i],edx 

//==========================================
(LCC 4.2)
	i = c % 5 % 3 + 3;
mov edi,3
mov eax,dword ptr (-4)[ebp]
mov esi,5
cdq
idiv esi
mov eax,edx
cdq
idiv edi
lea edi,(3)[edx]
mov dword ptr (-8)[ebp],edi

//==========================================
(MVC)
	i2 = (2*j + 1) / (h*i - 1);
 8B 45 D8         mov         eax,dword ptr [j] 
 8D 44 00 01      lea         eax,[eax+eax+1] 
 8B 4D E0         mov         ecx,dword ptr [h] 
 0F AF 4D DC      imul        ecx,dword ptr [i] 
 83 E9 01         sub         ecx,1 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 B8         mov         dword ptr [i2],eax 
 
  	i2 = (2*j) / (h*i);
 8B 45 D8         mov         eax,dword ptr [j] 
 D1 E0            shl         eax,1 
 8B 4D E0         mov         ecx,dword ptr [h] 
 0F AF 4D DC      imul        ecx,dword ptr [i] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 B8         mov         dword ptr [i2],eax 
 
//==========================================
TODO:
i = (2*j + 1) / (h*i - 1);
	the same as the code above

2008.12.21. (C4)
	
	i = (2*j) / (h*i);

	mov eax, dword ptr [h]
	imul eax, dword ptr [i]
	mov ecx, dword ptr [j]
	imul ecx, ecx, 2
	mov edx, eax
	mov eax, ecx
	mov ecx, edx
	cdq
	idiv ecx
	mov dword ptr [i], eax

//==========================================
(MVC)
i2= 1 % ( (a + b) % (a / b * 3/(c*d)) );
 8B 4D FC         mov         ecx,dword ptr [a] 
 03 4D F8         add         ecx,dword ptr [b] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F8         idiv        eax,dword ptr [b] 
 6B C0 03         imul        eax,eax,3 
 8B 75 F4         mov         esi,dword ptr [c] 
 0F AF 75 F0      imul        esi,dword ptr [d] 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B CA            mov         ecx,edx 
 B8 01 00 00 00   mov         eax,1 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 55 B8         mov         dword ptr [i2],edx 
 
 	i2= 7 % ( 3 + (a + b) % (a/(c*d)) );
 8B 4D FC         mov         ecx,dword ptr [a] 
 03 4D F8         add         ecx,dword ptr [b] 
 8B 75 F4         mov         esi,dword ptr [c] 
 0F AF 75 F0      imul        esi,dword ptr [d] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B CA            mov         ecx,edx 
 83 C1 03         add         ecx,3 
 B8 07 00 00 00   mov         eax,7 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 55 B8         mov         dword ptr [i2],edx 
 
 ( 17 instructions )
//==========================================
(C4)
i = 7 % ( 3 + (a + b) % (a/(c*d)) );
	
	mov eax, dword ptr [c]
	imul eax, dword ptr [d]
	mov ecx, eax
	mov eax, dword ptr [a]
	cdq
	idiv ecx
	mov ecx, dword ptr [a]
	add ecx, dword ptr [b]
	mov edx, eax
	mov eax, ecx
	mov ecx, edx
	cdq
	idiv ecx
	add edx, 3
	mov eax, 7
	mov ecx, edx
	cdq
	idiv ecx
	mov dword ptr [i], edx
	
	( 19 instructions )
	
//==========================================
( LCC 4.2 )
	i = 7 % ( 3 + (a + b) % (a/(c*d)) );

	mov edi,dword ptr (-4)[ebp]
	mov eax,7
	mov dword ptr (-24)[ebp],eax
	mov esi,dword ptr (-8)[ebp]
	lea eax,[esi][edi]
	mov dword ptr (-28)[ebp],eax
	mov eax,edi
	mov edi,dword ptr (-12)[ebp]
	mov esi,dword ptr (-16)[ebp]
	imul edi,esi
	cdq
	idiv edi
	mov dword ptr (-32)[ebp],eax
	mov eax,dword ptr (-28)[ebp]
	mov edi,dword ptr (-32)[ebp]
	cdq
	idiv edi
	lea edi,(3)[edx]
	mov eax,dword ptr (-24)[ebp]
	cdq
	idiv edi
	mov dword ptr (-20)[ebp],edx
	
	( 22 instructions, terrible code )
//==========================================
( MVC )
	i2 = 189 * ( 6 * 3757 % (a%1 + b*42) / (a/(c*d)) );
	
00401086 	8B 4D FC         mov         ecx,dword ptr [a] 
00401089 	81 E1 00 00 00 80 and         ecx,80000000h 
0040108F 	79 05            jns         main+96h (401096h) 
00401091 	49               dec         ecx  
00401092 	83 C9 FF         or          ecx,0FFFFFFFFh 
00401095 	41               inc         ecx  
00401096 	8B 55 F8         mov         edx,dword ptr [b] 
00401099 	6B D2 2A         imul        edx,edx,2Ah 
0040109C 	03 CA            add         ecx,edx 
0040109E 	B8 0E 58 00 00   mov         eax,580Eh 
004010A3 	99               cdq              
004010A4 	F7 F9            idiv        eax,ecx 
004010A6 	8B CA            mov         ecx,edx 
004010A8 	8B 75 F4         mov         esi,dword ptr [c] 
004010AB 	0F AF 75 F0      imul        esi,dword ptr [d] 
004010AF 	8B 45 FC         mov         eax,dword ptr [a] 
004010B2 	99               cdq              
004010B3 	F7 FE            idiv        eax,esi 
004010B5 	8B F0            mov         esi,eax 
004010B7 	8B C1            mov         eax,ecx 
004010B9 	99               cdq              
004010BA 	F7 FE            idiv        eax,esi 
004010BC 	69 C0 BD 00 00 00 imul        eax,eax,0BDh 
004010C2 	89 45 B8         mov         dword ptr [i2],eax 

//==========================================

( LCC 4.2 )

	i = 189 * ( 6 * 3757 % (a%1 + b*42) / (a/(c*d)) );
	
	mov edi,0
	mov eax,22542
	imul esi,dword ptr (-8)[ebp],42
	lea esi,[esi][edi]
	cdq
	idiv esi
	mov eax,edx
	mov dword ptr (-24)[ebp],eax
	mov eax,dword ptr (-4)[ebp]
	mov esi,dword ptr (-12)[ebp]
	mov ebx,dword ptr (-16)[ebp]
	imul esi,ebx
	cdq
	idiv esi
	mov dword ptr (-28)[ebp],eax
	mov eax,dword ptr (-24)[ebp]
	mov esi,dword ptr (-28)[ebp]
	cdq
	idiv esi
	imul esi,eax,189
	mov dword ptr (-20)[ebp],esi
	mov eax,edi


//==========================================
 ( MVC )
	a = b/(c*7);
 8B 4D F4         mov         ecx,dword ptr [c] 
 6B C9 07         imul        ecx,ecx,7 
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 FC         mov         dword ptr [a],eax
//==========================================
 ( C4 )
	a = b = d / (c * 7);
	imul ecx, dword ptr [c], 7
	mov eax, dword ptr [d]
	cdq
	idiv ecx
	mov dword ptr [b], eax
	mov dword ptr [a], eax
//==========================================

(MVC)
	i = 1 / (a + 8*j + 1) / (h*i);
 8B 45 D8         mov         eax,dword ptr [j] 
 8B 4D FC         mov         ecx,dword ptr [a] 
 8D 4C C1 01      lea         ecx,[ecx+eax*8+1] 
 B8 01 00 00 00   mov         eax,1 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B 4D E0         mov         ecx,dword ptr [h] 
 0F AF 4D DC      imul        ecx,dword ptr [i] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 DC         mov         dword ptr [i],eax 
//==========================================

( LCC 4.2 )
	i = 1 / (a + 8*j + 1) / (h*i);
mov edi,1
mov eax,edi
mov edi,dword ptr (-8)[ebp]
mov esi,dword ptr (-16)[ebp]
lea esi,[esi*8]
lea edi,[esi][edi]
lea edi,(1)[edi]
cdq
idiv edi
mov edi,dword ptr (-12)[ebp]
mov esi,dword ptr (-4)[ebp]
imul edi,esi
cdq
idiv edi
mov dword ptr (-4)[ebp],eax

//==========================================

( MVC )

i2 = 54432 % ((a / b) * 34) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c);

 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F8         idiv        eax,dword ptr [b] 
 8B C8            mov         ecx,eax 
 6B C9 22         imul        ecx,ecx,22h 
 B8 A0 D4 00 00   mov         eax,0D4A0h 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 8B 75 FC         mov         esi,dword ptr [a] 
 0F AF 75 F8      imul        esi,dword ptr [b] 
 6B F6 07         imul        esi,esi,7 
 B8 E3 01 00 00   mov         eax,1E3h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 B8 BA 0C 00 00   mov         eax,0CBAh 
 99               cdq              
 F7 FE            idiv        eax,esi 
 6B C0 18         imul        eax,eax,18h 
 03 C8            add         ecx,eax 
 B8 2B 00 00 00   mov         eax,2Bh 
 99               cdq              
 F7 7D F4         idiv        eax,dword ptr [c] 
 8B F2            mov         esi,edx 
 03 75 FC         add         esi,dword ptr [a] 
 B8 1B 55 01 00   mov         eax,1551Bh 
 99               cdq              
 F7 FE            idiv        eax,esi 
 03 C8            add         ecx,eax 
 89 4D B8         mov         dword ptr [i2],ecx 

( 30 instructions )

//==========================================

( C4 )

	i = 54432 % ((a / b) * 34) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c);

		mov eax, dword ptr [a]
		imul eax, dword ptr [b]
		imul ecx, eax, 7
		mov eax, 483
		cdq
		idiv ecx
		mov eax, 3258
		mov ecx, edx
		cdq
		idiv ecx
		imul ecx, eax, 24
		mov eax, dword ptr [a]
		cdq
		idiv dword ptr [b]
		imul esi, eax, 34
		mov eax, 54432
		cdq
		idiv esi
		add ecx, edx
		mov eax, 43
		cdq
		idiv dword ptr [c]
		add edx, dword ptr [a]
		mov eax, 87323
		mov esi, edx
		cdq
		idiv esi
		add ecx, eax
		mov dword ptr [i], ecx

	( 28 instructions )
//==========================================

( MVC )
	i2 = p%a/b/c/d/e/k*(5-5-5-5+m/(1/m));
	
 8B 45 C0         mov         eax,dword ptr [p] 
 99               cdq              
 F7 7D FC         idiv        eax,dword ptr [a] 
 8B C2            mov         eax,edx 
 99               cdq              
 F7 7D F8         idiv        eax,dword ptr [b] 
 99               cdq              
 F7 7D F4         idiv        eax,dword ptr [c] 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 99               cdq              
 F7 7D EC         idiv        eax,dword ptr [e] 
 99               cdq              
 F7 7D D4         idiv        eax,dword ptr [k] 
 8B C8            mov         ecx,eax 
 B8 01 00 00 00   mov         eax,1 
 99               cdq              
 F7 7D CC         idiv        eax,dword ptr [m] 
 8B F0            mov         esi,eax 
 8B 45 CC         mov         eax,dword ptr [m] 
 99               cdq              
 F7 FE            idiv        eax,esi 
 83 E8 0A         sub         eax,0Ah 
 0F AF C8         imul        ecx,eax 
 89 4D B8         mov         dword ptr [i2],ecx 

	( 24 )

//==========================================

( C4 )
	i = p%a/b/c/d/e/k*(5-5-5-5+m/(1/m));
	
	mov eax, dword ptr [p]
	cdq
	idiv dword ptr [a]
	mov eax, edx
	cdq
	idiv dword ptr [b]
	cdq
	idiv dword ptr [c]
	cdq
	idiv dword ptr [d]
	cdq
	idiv dword ptr [e]
	cdq
	idiv dword ptr [k]
	mov esi, eax
	mov eax, 1
	cdq
	idiv dword ptr [m]
	mov edi, eax
	mov eax, dword ptr [m]
	cdq
	idiv edi
	mov edi, 5
	sub edi, 5
	sub edi, 5
	sub edi, 5
	add eax, edi
	imul esi, eax
	mov dword ptr [i], esi
	
	( 28 )
	
//==========================================

( MVC )
	i2 = a * b * 9;
 8B 45 FC         mov         eax,dword ptr [a] 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 6B C0 09         imul        eax,eax,9 
 89 45 B8         mov         dword ptr [i2],eax 
 
 //==========================================

( MVC )
	i2 = a * b * 9 + a/b;
 8B 4D FC         mov         ecx,dword ptr [a] 
 0F AF 4D F8      imul        ecx,dword ptr [b] 
 6B C9 09         imul        ecx,ecx,9 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F8         idiv        eax,dword ptr [b] 
 03 C8            add         ecx,eax 
 89 4D B8         mov         dword ptr [i2],ecx 
 
 //==========================================
 
 ( MVC )
 	i2 = (a * b) / (a*3) / (a/(c*d));
 8B 45 FC         mov         eax,dword ptr [a] 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 8B 4D FC         mov         ecx,dword ptr [a] 
 6B C9 03         imul        ecx,ecx,3 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B C8            mov         ecx,eax 
 8B 75 F4         mov         esi,dword ptr [c] 
 0F AF 75 F0      imul        esi,dword ptr [d] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 89 45 B8         mov         dword ptr [i2],eax 
  
 //==========================================
 
 ( MVC )
 	i2 = (a * b) / (a/3);
 8B 4D FC         mov         ecx,dword ptr [a] 
 0F AF 4D F8      imul        ecx,dword ptr [b] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 89 45 B8         mov         dword ptr [i2],eax 
 
 //==========================================
 
 ( C4 )
 i = 189 * ((6 * 3757) / (a + b * 42))

Assembler code:

	imul eax, [b], 42       ; r32 : mul( mem, imm ), (35)
	add eax, [a]			; r32 : add( r32, mrc ), (25)
	mov ecx, 6				; r32 : imm, (20)
	mov esi, eax
	imul eax, ecx, 3757     ; r32 : mul( r32, imm ), (33)
	cdq
	idiv esi				; r32 : div( r32, mr ), (36)
	imul ecx, eax, 189      ; r32 : mul( r32, imm ), (33)
	mov [i], ecx			; rc : assign( addr, rc ), (22)

 //==========================================
 
 ( MVC )
 	i2 = 189 * ((6 * 3757) / (a + b * 42));
 8B 4D F8         mov         ecx,dword ptr [b] 
 6B C9 2A         imul        ecx,ecx,2Ah 
 03 4D FC         add         ecx,dword ptr [a] 
 B8 0E 58 00 00   mov         eax,580Eh 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 69 C0 BD 00 00 00 imul        eax,eax,0BDh 
 89 45 B8         mov         dword ptr [i2],eax 
 
 //==========================================
 
 	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	int i2;
	
	a = 100;
	b = 2;
	c = 3;
	d = 4;
	e = 5;
	f = 6;
	g = 7;
	h = 8;
	i = 99;
	j = 10;
	k = 11;
	l = 12;
	m = 1;
	n = o = p = q = 999;
	
 ( MVC )

 	i2 = a + b/4 + c/67 * 343 % 32 * 232324 / ( 434 + (a*b) % 8 / 1 );

 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 83 E2 03         and         edx,3 
 03 C2            add         eax,edx 
 8B C8            mov         ecx,eax 
 C1 F9 02         sar         ecx,2 
 03 4D FC         add         ecx,dword ptr [a] 
 8B 45 F4         mov         eax,dword ptr [c] 
 99               cdq              
 BE 43 00 00 00   mov         esi,43h 
 F7 FE            idiv        eax,esi 
 69 C0 57 01 00 00 imul        eax,eax,157h 
 25 1F 00 00 80   and         eax,8000001Fh 
 79 05            jns         main+0B5h (4010B5h) 
 48               dec         eax  
 83 C8 E0         or          eax,0FFFFFFE0h 
 40               inc         eax  
 69 C0 84 8B 03 00 imul        eax,eax,38B84h 
 8B 55 FC         mov         edx,dword ptr [a] 
 0F AF 55 F8      imul        edx,dword ptr [b] 
 8B F2            mov         esi,edx 
 81 E6 07 00 00 80 and         esi,80000007h 
 79 05            jns         main+0D1h (4010D1h) 
 4E               dec         esi  
 83 CE F8         or          esi,0FFFFFFF8h 
 46               inc         esi  
 81 C6 B2 01 00 00 add         esi,1B2h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 03 C8            add         ecx,eax 
 89 4D B8         mov         dword ptr [i2],ecx 
 
	( 30 )
 
	( The result is 100. )
 
 //==========================================
 	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
 	int i2;

	a = 100;
	b = 2;
	c = 3;
	d = 4;
	e = 5;
	f = 6;
	g = 7;
	h = 8;
	i = 99;
	j = 10;
	k = 11;
	l = 12;
	m = 1;
	n = o = p = q = 999;
	
 ( C4 )
	
	i = a + b/4 + c/67 * 343 % 32 * 232324 / ( 434 + (a*b) % 8 / 1 );
 
		mov eax, dword ptr [c]
		mov ecx, 67
		cdq
		idiv ecx
		mov ecx, eax
		imul eax, ecx, 343
		mov ecx, 32
		cdq
		idiv ecx
		imul eax, edx, 232324
		mov ecx, dword ptr [a]
		imul ecx, dword ptr [b]
		mov esi, eax
		mov eax, ecx
		mov ecx, 8
		cdq
		idiv ecx
		mov eax, edx
		mov ecx, 1
		cdq
		idiv ecx
		add eax, 434
		mov ecx, eax
		mov eax, esi
		cdq
		idiv ecx
		mov ecx, eax
		mov eax, dword ptr [b]
		mov esi, 4
		cdq
		idiv esi
		add eax, dword ptr [a]
		add ecx, eax
		mov dword ptr [i], ecx
 ( 33 )
 //==========================================
	( MVC )
	i2 = a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 );

00401080 	8B 45 F8         mov         eax,dword ptr [b] 
00401083 	99               cdq              
00401084 	83 E2 03         and         edx,3 
00401087 	03 C2            add         eax,edx 
00401089 	8B C8            mov         ecx,eax 
0040108B 	C1 F9 02         sar         ecx,2 
0040108E 	03 4D FC         add         ecx,dword ptr [a] 
00401091 	8B 45 F4         mov         eax,dword ptr [c] 
00401094 	69 C0 57 01 00 00 imul        eax,eax,157h 
0040109A 	99               cdq              
0040109B 	F7 7D BC         idiv        eax,dword ptr [q] 
0040109E 	69 D2 84 8B 03 00 imul        edx,edx,38B84h 
004010A4 	8B 45 FC         mov         eax,dword ptr [a] 
004010A7 	0F AF 45 F8      imul        eax,dword ptr [b] 
004010AB 	8B F0            mov         esi,eax 
004010AD 	81 E6 07 00 00 80 and         esi,80000007h 
004010B3 	79 05            jns         main+0BAh (4010BAh) 
004010B5 	4E               dec         esi  
004010B6 	83 CE F8         or          esi,0FFFFFFF8h 
004010B9 	46               inc         esi  
004010BA 	81 C6 B2 01 00 00 add         esi,1B2h 
004010C0 	8B C2            mov         eax,edx 
004010C2 	99               cdq              
004010C3 	F7 FE            idiv        eax,esi 
004010C5 	03 C8            add         ecx,eax 
004010C7 	89 4D B8         mov         dword ptr [i2],ecx 
 
	( 25 )
 //==========================================
	( C4 )
	i = a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 );
	
	mov eax, dword ptr [a]          ; r32 : mem, (21)
	imul eax, dword ptr [b]         ; r32 : mul( r32, mrc ), (34)
	mov ecx, 8              ; r32 : imm, (20)
	cdq
	idiv ecx
	mov eax, edx
	mov ecx, 1              ; r32 : imm, (20)
	cdq
	idiv ecx
	add eax, 434            ; r32 : add( r32, mrc ), (25)
	mov ecx, eax
	imul eax, dword ptr [c], 343            ; r32 : mul( mem, imm ), (35)
	cdq
	idiv dword ptr [q]
	imul eax, edx, 232324           ; r32 : mul( r32, imm ), (33)
	cdq
	idiv ecx
	mov ecx, eax
	mov eax, dword ptr [b]          ; r32 : mem, (21)
	mov esi, 4              ; r32 : imm, (20)
	cdq
	idiv esi
	add eax, dword ptr [a]          ; r32 : add( r32, mrc ), (25)
	add ecx, eax            ; r32 : add( r32, mrc ), (25)
	mov dword ptr [i], ecx          ; rc : assign( addr, rc ), (22)
	
	( 24 )
 //==========================================
 ( MVC )
	
	i2 = 54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17;
	
	 8B 45 FC         mov         eax,dword ptr [a] 
	 99               cdq              
	 F7 7D F8         idiv        eax,dword ptr [b] 
	 8B C8            mov         ecx,eax 
	 6B C9 22         imul        ecx,ecx,22h		; 22h is 34d
	 0F AF 4D F4      imul        ecx,dword ptr [c] 
	 8B 75 FC         mov         esi,dword ptr [a] 
	 D1 E6            shl         esi,1 
	 B8 20 00 00 00   mov         eax,20h 
	 99               cdq              
	 F7 FE            idiv        eax,esi 
	 03 CA            add         ecx,edx 
	 B8 A0 D4 00 00   mov         eax,0D4A0h		; 0D4A0h is 54432d
	 99               cdq              
	 F7 F9            idiv        eax,ecx 
	 8B CA            mov         ecx,edx 
	 8B 75 FC         mov         esi,dword ptr [a] 
	 0F AF 75 F8      imul        esi,dword ptr [b] 
	 6B F6 07         imul        esi,esi,7 
	 B8 E3 01 00 00   mov         eax,1E3h			; 1E3h is 483d
	 99               cdq              
	 F7 FE            idiv        eax,esi 
	 8B F2            mov         esi,edx 
	 B8 BA 0C 00 00   mov         eax,0CBAh			; 0CBAh is 3258d
	 99               cdq              
	 F7 FE            idiv        eax,esi 
	 6B C0 18         imul        eax,eax,18h 
	 03 C8            add         ecx,eax 
	 B8 2B 00 00 00   mov         eax,2Bh 
	 99               cdq              
	 F7 7D F4         idiv        eax,dword ptr [c] 
	 8B F2            mov         esi,edx 
	 03 75 FC         add         esi,dword ptr [a] 
	 B8 1B 55 01 00   mov         eax,1551Bh		1551Bh is 87323d
	 99               cdq              
	 F7 FE            idiv        eax,esi 
	 99               cdq              
	 BE 36 00 00 00   mov         esi,36h 
	 F7 FE            idiv        eax,esi 
	 03 CA            add         ecx,edx 
	 8B 45 FC         mov         eax,dword ptr [a] 
	 6B C0 2B         imul        eax,eax,2Bh 
	 0F AF 45 F8      imul        eax,dword ptr [b] 
	 0F AF 45 F4      imul        eax,dword ptr [c] 
	 99               cdq              
	 BE 11 00 00 00   mov         esi,11h 
	 F7 FE            idiv        eax,esi 
	 2B C8            sub         ecx,eax 
	 89 4D B8         mov         dword ptr [i2],ecx 
 
	( 48 )
 
	( The result is 1739. )
 
 //==========================================
	( C4 )
	
	i = 54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17;

	imul eax, dword ptr [a], 2              ; r32 : mul( mem, imm ), (35)
	mov ecx, eax
	mov eax, 32             ; r32 : imm, (20)
	cdq
	idiv ecx
	mov eax, dword ptr [a]          ; r32 : mem, (21)
	mov ecx, edx
	cdq
	idiv dword ptr [b]
	imul esi, eax, 34               ; r32 : mul( r32, imm ), (33)
	imul esi, dword ptr [c]         ; r32 : mul( r32, mrc ), (34)
	mov eax, esi
	mov esi, 1              ; r32 : imm, (20)
	cdq
	idiv esi
	add ecx, eax            ; r32 : add( r32, mrc ), (25)
	mov eax, 54432          ; r32 : imm, (20)
	cdq
	idiv ecx
	mov eax, dword ptr [a]          ; r32 : mem, (21)
	imul eax, dword ptr [b]         ; r32 : mul( r32, mrc ), (34)
	imul ecx, eax, 7                ; r32 : mul( r32, imm ), (33)
	mov eax, 483            ; r32 : imm, (20)
	mov esi, edx
	cdq
	idiv ecx
	mov eax, 3258           ; r32 : imm, (20)
	mov ecx, edx
	cdq
	idiv ecx
	imul ecx, eax, 24               ; r32 : mul( r32, imm ), (33)
	add esi, ecx            ; r32 : add( r32, mrc ), (25)
	mov eax, 43             ; r32 : imm, (20)
	cdq
	idiv dword ptr [c]
	add edx, dword ptr [a]          ; r32 : add( r32, mrc ), (25)
	mov eax, 87323          ; r32 : imm, (20)
	mov ecx, edx
	cdq
	idiv ecx
	mov ecx, 54             ; r32 : imm, (20)
	cdq
	idiv ecx
	add esi, edx            ; r32 : add( r32, mrc ), (25)
	imul eax, dword ptr [a], 43             ; r32 : mul( mem, imm ), (35)
	imul eax, dword ptr [b]         ; r32 : mul( r32, mrc ), (34)
	imul eax, dword ptr [c]         ; r32 : mul( r32, mrc ), (34)
	mov ecx, 17             ; r32 : imm, (20)
	cdq
	idiv ecx
	sub esi, eax            ; r32 : sub( r32, mrc ), (30)
	mov dword ptr [i], esi          ; rc : assign( addr, rc ), (22)	
 
	( 51 )
//==========================================
 	( LCC 4.2 )
 	
 	i = 54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17;
 	
 	mov edi,dword ptr (-4)[ebp]
	mov esi,dword ptr (-8)[ebp]
	mov ebx,dword ptr (-12)[ebp]
	mov edx,43
	mov dword ptr (-20)[ebp],edx
	mov eax,54432
	mov dword ptr (-24)[ebp],eax
	mov eax,edi
	cdq
	idiv esi
	imul edx,eax,34
	imul edx,ebx
	mov dword ptr (-28)[ebp],edx
	mov eax,32
	lea ecx,[edi*2]
	cdq
	idiv ecx
	mov ecx,dword ptr (-28)[ebp]
	lea edx,[edx][ecx]
	mov dword ptr (-32)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ecx,dword ptr (-32)[ebp]
	cdq
	idiv ecx
	mov dword ptr (-36)[ebp],edx
	mov eax,3258
	mov dword ptr (-40)[ebp],eax
	mov eax,483
	mov ecx,edi
	imul ecx,esi
	imul ecx,ecx,7
	cdq
	idiv ecx
	mov dword ptr (-44)[ebp],edx
	mov eax,dword ptr (-40)[ebp]
	mov ecx,dword ptr (-44)[ebp]
	cdq
	idiv ecx
	imul edx,eax,24
	mov ecx,dword ptr (-36)[ebp]
	lea edx,[edx][ecx]
	mov dword ptr (-48)[ebp],edx
	mov eax,87323
	mov dword ptr (-52)[ebp],eax
	mov ecx,dword ptr (-20)[ebp]
	mov eax,ecx
	cdq
	idiv ebx
	lea edx,[edx][edi]
	mov dword ptr (-56)[ebp],edx
	mov eax,dword ptr (-52)[ebp]
	mov ecx,dword ptr (-56)[ebp]
	cdq
	idiv ecx
	mov ecx,54
	cdq
	idiv ecx
	mov ecx,dword ptr (-48)[ebp]
	lea edx,[edx][ecx]
	mov dword ptr (-60)[ebp],edx
	imul edi,edi,43
	imul edi,esi
	mov eax,edi
	imul eax,ebx
	mov edi,17
	cdq
	idiv edi
	mov edi,dword ptr (-60)[ebp]
	sub edi,eax
	mov dword ptr (-16)[ebp],edi
 
	( 69 )
 
 //==========================================
 ( MVC )
	i2 = 5 % (a * 7) / (a % d + 1);
	
 8B 4D FC         mov         ecx,dword ptr [a] 
 6B C9 07         imul        ecx,ecx,7 
 B8 05 00 00 00   mov         eax,5 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B F2            mov         esi,edx 
 83 C6 01         add         esi,1 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 89 45 B8         mov         dword ptr [i2],eax 
 
	( 14 )
 
 //==========================================
 ( C4 )
 i = 5 % (a * 7) / (a % d + 1);
 
 	imul    eax, dword ptr [a], 7
	mov     ecx, eax
	mov     eax, 5
	cdq
	idiv    ecx
	mov     eax, edx			; <= remove this crap!!!
	mov     ecx, eax
	mov     eax, dword ptr [a]
	cdq
	idiv    dword ptr [d]
	inc     edx
	mov     eax, ecx			; <= remove this crap!!!
	mov     ecx, edx
	cdq
	idiv    ecx
	mov     dword ptr [i], eax
 
	( 15 )
 //==========================================
 ( LCC 4.2 )
 
	i = 5 % (a * 7) / (a % d + 1);
 
	mov edi,dword ptr (-4)[ebp]
	mov eax,5
	imul esi,edi,7
	cdq
	idiv esi
	mov eax,edx
	mov dword ptr (-16)[ebp],eax
	mov eax,edi
	mov edi,dword ptr (-8)[ebp]
	cdq
	idiv edi
	lea edi,(1)[edx]
	mov eax,dword ptr (-16)[ebp]
	cdq
	idiv edi
	mov dword ptr (-12)[ebp],eax
 
	( 15 )
 //==========================================
 ( MVC )
 i2 = a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 );
 
00401080 8B 45 F8         mov         eax,dword ptr [b] 
00401083 99               cdq              
00401084 83 E2 03         and         edx,3 
00401087 03 C2            add         eax,edx 
00401089 8B C8            mov         ecx,eax 
0040108B C1 F9 02         sar         ecx,2 
0040108E 03 4D FC         add         ecx,dword ptr [a] 
00401091 8B 45 F4         mov         eax,dword ptr [c] 
00401094 69 C0 57 01 00 00 imul        eax,eax,157h 
0040109A 99               cdq              
0040109B F7 7D BC         idiv        eax,dword ptr [q] 
0040109E 69 D2 84 8B 03 00 imul        edx,edx,38B84h 
004010A4 8B 45 FC         mov         eax,dword ptr [a] 
004010A7 0F AF 45 F8      imul        eax,dword ptr [b] 
004010AB 8B F0            mov         esi,eax 
004010AD 81 E6 07 00 00 80 and         esi,80000007h 
004010B3 79 05            jns         main+0BAh (4010BAh) 
004010B5 4E               dec         esi  
004010B6 83 CE F8         or          esi,0FFFFFFF8h 
004010B9 46               inc         esi  
004010BA 0F AF 75 F4      imul        esi,dword ptr [c] 
004010BE 81 C6 9B 01 00 00 add         esi,19Bh 
004010C4 8B C2            mov         eax,edx 
004010C6 99               cdq              
004010C7 F7 FE            idiv        eax,esi 
004010C9 03 C8            add         ecx,eax 
004010CB 89 4D B8         mov         dword ptr [i2],ecx 
	
	( 26 )
//==========================================
 ( C4 )
	
	i = a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 );
 
		mov     eax, dword ptr [a]
		imul    eax, dword ptr [b]
		mov     ecx, 8
		cdq
		idiv    ecx
		mov     eax, edx
		mov     ecx, 1
		cdq
		idiv    ecx
		imul    eax, dword ptr [c]
		add     eax, 434
		sub     eax, 23
		mov     ecx, eax
		imul    eax, dword ptr [c], 343
		cdq
		idiv    dword ptr [q]
		imul    eax, edx, 232324
		cdq
		idiv    ecx
		mov     ecx, eax
		mov     eax, dword ptr [b]
		mov     esi, 4
		cdq
		idiv    esi
		add     eax, dword ptr [a]
		add     ecx, eax
		mov     dword ptr [i], ecx
		
		( 26 )
 
//====================================================================================
( MVC )
	i2 = (54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17 ) * (a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 ));
	
	00401080 8B 45 FC         mov         eax,dword ptr [a] 
	00401083 99               cdq              
	00401084 F7 7D F8         idiv        eax,dword ptr [b] 
	00401087 8B C8            mov         ecx,eax 
	00401089 6B C9 22         imul        ecx,ecx,22h 
	0040108C 0F AF 4D F4      imul        ecx,dword ptr [c] 
	00401090 8B 75 FC         mov         esi,dword ptr [a] 
	00401093 D1 E6            shl         esi,1 
	00401095 B8 20 00 00 00   mov         eax,20h 
	0040109A 99               cdq              
	0040109B F7 FE            idiv        eax,esi 
	0040109D 03 CA            add         ecx,edx 
	0040109F B8 A0 D4 00 00   mov         eax,0D4A0h 
	004010A4 99               cdq              
	004010A5 F7 F9            idiv        eax,ecx 
	004010A7 8B CA            mov         ecx,edx 
	004010A9 8B 75 FC         mov         esi,dword ptr [a] 
	004010AC 0F AF 75 F8      imul        esi,dword ptr [b] 
	004010B0 6B F6 07         imul        esi,esi,7 
	004010B3 B8 E3 01 00 00   mov         eax,1E3h 
	004010B8 99               cdq              
	004010B9 F7 FE            idiv        eax,esi 
	004010BB 8B F2            mov         esi,edx 
	004010BD B8 BA 0C 00 00   mov         eax,0CBAh 
	004010C2 99               cdq              
	004010C3 F7 FE            idiv        eax,esi 
	004010C5 6B C0 18         imul        eax,eax,18h 
	004010C8 03 C8            add         ecx,eax 
	004010CA B8 2B 00 00 00   mov         eax,2Bh 
	004010CF 99               cdq              
	004010D0 F7 7D F4         idiv        eax,dword ptr [c] 
	004010D3 8B F2            mov         esi,edx 
	004010D5 03 75 FC         add         esi,dword ptr [a] 
	004010D8 B8 1B 55 01 00   mov         eax,1551Bh 
	004010DD 99               cdq              
	004010DE F7 FE            idiv        eax,esi 
	004010E0 99               cdq              
	004010E1 BE 36 00 00 00   mov         esi,36h 
	004010E6 F7 FE            idiv        eax,esi 
	004010E8 03 CA            add         ecx,edx 
	004010EA 8B 45 FC         mov         eax,dword ptr [a] 
	004010ED 6B C0 2B         imul        eax,eax,2Bh 
	004010F0 0F AF 45 F8      imul        eax,dword ptr [b] 
	004010F4 0F AF 45 F4      imul        eax,dword ptr [c] 
	004010F8 99               cdq              
	004010F9 BE 11 00 00 00   mov         esi,11h 
	004010FE F7 FE            idiv        eax,esi 
	00401100 2B C8            sub         ecx,eax 
	00401102 8B 45 F8         mov         eax,dword ptr [b] 
	00401105 99               cdq              
	00401106 83 E2 03         and         edx,3 
	00401109 03 C2            add         eax,edx 
	0040110B 8B F0            mov         esi,eax 
	0040110D C1 FE 02         sar         esi,2 
	00401110 03 75 FC         add         esi,dword ptr [a] 
	00401113 8B 45 F4         mov         eax,dword ptr [c] 
	00401116 69 C0 57 01 00 00 imul        eax,eax,157h 
	0040111C 99               cdq              
	0040111D F7 7D BC         idiv        eax,dword ptr [q] 
	00401120 69 D2 84 8B 03 00 imul        edx,edx,38B84h 
	00401126 8B 45 FC         mov         eax,dword ptr [a] 
	00401129 0F AF 45 F8      imul        eax,dword ptr [b] 
	0040112D 8B F8            mov         edi,eax 
	0040112F 81 E7 07 00 00 80 and         edi,80000007h 
	00401135 79 05            jns         main+13Ch (40113Ch) 
	00401137 4F               dec         edi  
	00401138 83 CF F8         or          edi,0FFFFFFF8h 
	0040113B 47               inc         edi  
	0040113C 0F AF 7D F4      imul        edi,dword ptr [c] 
	00401140 81 C7 9B 01 00 00 add         edi,19Bh 
	00401146 8B C2            mov         eax,edx 
	00401148 99               cdq              
	00401149 F7 FF            idiv        eax,edi 
	0040114B 03 F0            add         esi,eax 
	0040114D 0F AF CE         imul        ecx,esi 
	00401150 89 4D B8         mov         dword ptr [i2],ecx 

	( 75 )
//====================================================================================
( C4 )
	i = (54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17 ) * (a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 ));

	imul    eax, dword ptr [a], 2
	mov     ecx, eax
	mov     eax, 32
	cdq
	idiv    ecx
	mov     eax, dword ptr [a]
	mov     ecx, edx
	cdq
	idiv    dword ptr [b]
	imul    esi, eax, 34
	imul    esi, dword ptr [c]
	mov     eax, esi
	mov     esi, 1
	cdq
	idiv    esi
	add     ecx, eax
	mov     eax, 54432
	cdq
	idiv    ecx
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	imul    ecx, eax, 7
	mov     eax, 483
	mov     esi, edx
	cdq
	idiv    ecx
	mov     eax, 3258
	mov     ecx, edx
	cdq
	idiv    ecx
	imul    ecx, eax, 24
	add     esi, ecx
	mov     eax, 43
	cdq
	idiv    dword ptr [c]
	add     edx, dword ptr [a]
	mov     eax, 87323
	mov     ecx, edx
	cdq
	idiv    ecx
	mov     ecx, 54
	cdq
	idiv    ecx
	add     esi, edx
	imul    eax, dword ptr [a], 43
	imul    eax, dword ptr [b]
	imul    eax, dword ptr [c]
	mov     ecx, 17
	cdq
	idiv    ecx
	sub     esi, eax
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	mov     ecx, 8
	cdq
	idiv    ecx
	mov     eax, edx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    eax, dword ptr [c]
	add     eax, 434
	sub     eax, 23
	mov     ecx, eax
	imul    eax, dword ptr [c], 343
	cdq
	idiv    dword ptr [q]
	imul    eax, edx, 232324
	cdq
	idiv    ecx
	mov     ecx, eax
	mov     eax, dword ptr [b]
	mov     edi, 4
	cdq
	idiv    edi
	add     eax, dword ptr [a]
	add     ecx, eax
	imul    esi, ecx
	mov     dword ptr [i], esi

	( 78 )
//====================================================================================
( MVC )
	i2 = i / (b - 1 + b*8 + c * d) / (e + f);
	
 8B 45 F8         mov         eax,dword ptr [b] 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 4C C1 FF      lea         ecx,[ecx+eax*8-1] 
 8B 55 F4         mov         edx,dword ptr [c] 
 0F AF 55 F0      imul        edx,dword ptr [d] 
 03 CA            add         ecx,edx 
 8B 45 DC         mov         eax,dword ptr [i] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B 4D EC         mov         ecx,dword ptr [e] 
 03 4D E8         add         ecx,dword ptr [f] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 B8         mov         dword ptr [i2],eax 
	
	( 13 )
//====================================================================================
( C4 )
	i = i / (b - 1 + b*8 + c * d) / (e + f);
	
		imul    eax, dword ptr [b], 8
		mov     ecx, dword ptr [b]
		dec     ecx
		add     ecx, eax
		mov     eax, dword ptr [c]
		imul    eax, dword ptr [d]
		add     ecx, eax
		mov     eax, dword ptr [i]
		cdq
		idiv    ecx
		mov     ecx, dword ptr [e]
		add     ecx, dword ptr [f]
		cdq
		idiv    ecx
		mov     dword ptr [i], eax
		
		( 14 )
		
//====================================================================================
( C4 )

i = (54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17 ) * (a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 ));

	mov     eax, dword ptr [a]
	cdq
	idiv    dword ptr [b]
	imul    ecx, eax, 34
	imul    ecx, dword ptr [c]
	mov     eax, ecx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    ecx, dword ptr [a], 2
	mov     esi, eax
	mov     eax, 32
	cdq
	idiv    ecx
	add     esi, edx
	mov     eax, 54432
	cdq
	idiv    esi
	mov     ecx, dword ptr [a]
	imul    ecx, dword ptr [b]
	imul    eax, ecx, 7
	mov     ecx, eax
	mov     eax, 483
	mov     esi, edx
	cdq
	idiv    ecx
	mov     eax, 3258
	mov     ecx, edx
	cdq
	idiv    ecx
	imul    ecx, eax, 24
	add     esi, ecx
	mov     eax, 43
	cdq
	idiv    dword ptr [c]
	add     edx, dword ptr [a]
	mov     eax, 87323
	mov     ecx, edx
	cdq
	idiv    ecx
	mov     ecx, 54
	cdq
	idiv    ecx
	add     esi, edx
	imul    ecx, dword ptr [a], 43
	imul    ecx, dword ptr [b]
	imul    ecx, dword ptr [c]
	mov     eax, ecx
	mov     ecx, 17
	cdq
	idiv    ecx
	sub     esi, eax
	mov     ecx, dword ptr [a]
	imul    ecx, dword ptr [b]
	mov     eax, ecx
	mov     ecx, 8
	cdq
	idiv    ecx
	mov     eax, edx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    eax, dword ptr [c]
	add     eax, 434
	sub     eax, 23
	mov     ecx, eax
	imul    eax, dword ptr [c], 343
	cdq
	idiv    dword ptr [q]
	imul    eax, edx, 232324
	cdq
	idiv    ecx
	mov     ecx, eax
	mov     eax, dword ptr [b]
	mov     edi, 4
	cdq
	idiv    edi
	add     eax, dword ptr [a]
	add     ecx, eax
	imul    esi, ecx
	mov     dword ptr [i], esi

	( 80 )

//--------- another variant ------------

i = (54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17 ) * (a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 ));

	mov     eax, dword ptr [a]
	cdq
	idiv    dword ptr [b]
	imul    ecx, eax, 34
	imul    ecx, dword ptr [c]
	mov     eax, ecx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    ecx, dword ptr [a], 2
	mov     esi, eax
	mov     eax, 32
	cdq
	idiv    ecx
	add     esi, edx
	mov     eax, 54432
	cdq
	idiv    esi
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	imul    ecx, eax, 7
	mov     eax, 483
	mov     esi, edx
	cdq
	idiv    ecx
	mov     eax, 3258
	mov     ecx, edx
	cdq
	idiv    ecx
	imul    ecx, eax, 24
	add     esi, ecx
	mov     eax, 43
	cdq
	idiv    dword ptr [c]
	add     edx, dword ptr [a]
	mov     eax, 87323
	mov     ecx, edx
	cdq
	idiv    ecx
	mov     ecx, 54
	cdq
	idiv    ecx
	add     esi, edx
	imul    eax, dword ptr [a], 43
	imul    eax, dword ptr [b]
	imul    eax, dword ptr [c]
	mov     ecx, 17
	cdq
	idiv    ecx
	sub     esi, eax
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	mov     ecx, 8
	cdq
	idiv    ecx
	mov     eax, edx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    eax, dword ptr [c]
	add     eax, 434
	sub     eax, 23
	mov     ecx, eax
	imul    eax, dword ptr [c], 343
	cdq
	idiv    dword ptr [q]
	imul    eax, edx, 232324
	cdq
	idiv    ecx
	mov     ecx, eax
	mov     eax, dword ptr [b]
	mov     edi, 4
	cdq
	idiv    edi
	add     eax, dword ptr [a]
	add     ecx, eax
	imul    esi, ecx
	mov     dword ptr [i], esi

	( 77 )
//====================================================================================
( LCC 4.2 )

int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;

i = (54432 % ((a / b) * 34 * c / 1 + 32 % (2 * a) ) + 3258 / (483 % (a*b*7)) * 24 + 87323 / (a + 43 %c) % 54 - 43*a*b*c/17 ) * (a + b/4 + c * 343 % q * 232324 / ( 434 + (a*b) % 8 / 1 * c - 23 ));

	mov edi,dword ptr (-4)[ebp]
	mov esi,dword ptr (-8)[ebp]
	mov dword ptr (-36)[ebp],esi
	mov ebx,dword ptr (-12)[ebp]
	mov edx,edi
	imul edx,esi
	mov dword ptr (-24)[ebp],edx
	mov ecx,43
	mov eax,54432
	mov dword ptr (-28)[ebp],eax
	mov eax,edi
	cdq
	idiv esi
	imul edx,eax,34
	imul edx,ebx
	mov dword ptr (-32)[ebp],edx
	mov eax,32
	lea esi,[edi*2]
	cdq
	idiv esi
	mov esi,dword ptr (-32)[ebp]
	lea esi,[edx][esi]
	mov eax,dword ptr (-28)[ebp]
	cdq
	idiv esi
	mov dword ptr (-40)[ebp],edx
	mov eax,3258
	mov dword ptr (-44)[ebp],eax
	mov eax,483
	mov esi,dword ptr (-24)[ebp]
	imul esi,dword ptr (-24)[ebp],7
	cdq
	idiv esi
	mov dword ptr (-48)[ebp],edx
	mov eax,dword ptr (-44)[ebp]
	mov esi,dword ptr (-48)[ebp]
	cdq
	idiv esi
	imul esi,eax,24
	mov edx,dword ptr (-40)[ebp]
	lea esi,[esi][edx]
	mov eax,87323
	mov dword ptr (-52)[ebp],eax
	mov eax,ecx
	cdq
	idiv ebx
	lea edx,[edx][edi]
	mov dword ptr (-56)[ebp],edx
	mov eax,dword ptr (-52)[ebp]
	mov ecx,dword ptr (-56)[ebp]
	cdq
	idiv ecx
	mov ecx,54
	cdq
	idiv ecx
	lea esi,[edx][esi]
	imul edx,edi,43
	mov ecx,dword ptr (-36)[ebp]
	imul edx,ecx
	mov eax,edx
	imul eax,ebx
	mov ecx,17
	cdq
	idiv ecx
	sub esi,eax
	mov edx,dword ptr (-36)[ebp]
	mov eax,edx
	mov ecx,4
	cdq
	idiv ecx
	lea edi,[eax][edi]
	imul eax,ebx,343
	mov ecx,dword ptr (-20)[ebp]
	cdq
	idiv ecx
	imul eax,edx,232324
	mov dword ptr (-60)[ebp],eax
	mov ecx,dword ptr (-24)[ebp]
	mov eax,ecx
	mov ecx,8
	cdq
	idiv ecx
	mov edx,edx
	imul edx,ebx
	lea ebx,(434)[edx]
	sub ebx,23
	mov eax,dword ptr (-60)[ebp]
	cdq
	idiv ebx
	lea edi,[eax][edi]
	imul esi,edi
	mov dword ptr (-16)[ebp],esi

	( 91 )
//====================================================================================
int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
unsigned  ua, ub, uc;

	ua = (ub / uc + 43 * 8) + ua / uc;
 8B 45 B0        		 mov         eax,dword ptr [ub] 
 33 D2           		 xor         edx,edx 
 F7 75 AC        		 div         eax,dword ptr [uc] 
 8B C8           		 mov         ecx,eax 
 8B 45 B4        		 mov         eax,dword ptr [ua] 
 33 D2           		 xor         edx,edx 
 F7 75 AC        		 div         eax,dword ptr [uc] 
 8D 94 01 58 01 00 00	lea         edx,[ecx+eax+158h] 
 89 55 B4				mov         dword ptr [ua],edx 
	( 9 )
//====================================================================================
( C4 )

i = (54431 % ((a / b) * 31 * c / 1 + 721 % (7 * a) ) + 325 / (483 % (a*b*7)) * 21 + 87323 / (a + 43 %c) % 51 - 43*a*b*c/17 ) * (a + b/9 + c * 343 % q * 232323 / ( 431 + (a*b) % 98 / 2 * c - 77 ));

	mov     eax, dword ptr [a]
	cdq
	idiv    dword ptr [b]
	imul    ecx, eax, 31
	imul    ecx, dword ptr [c]
	mov     eax, ecx
	mov     ecx, 1
	cdq
	idiv    ecx
	imul    ecx, dword ptr [a], 7
	mov     esi, eax
	mov     eax, 721
	cdq
	idiv    ecx
	add     esi, edx
	mov     eax, 54431
	cdq
	idiv    esi
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	imul    ecx, eax, 7
	mov     eax, 483
	mov     esi, edx
	cdq
	idiv    ecx
	mov     eax, 325
	mov     ecx, edx
	cdq
	idiv    ecx
	imul    ecx, eax, 21
	add     esi, ecx
	mov     eax, 43
	cdq
	idiv    dword ptr [c]
	add     edx, dword ptr [a]
	mov     eax, 87323
	mov     ecx, edx
	cdq
	idiv    ecx
	mov     ecx, 51
	cdq
	idiv    ecx
	add     esi, edx
	imul    eax, dword ptr [a], 43
	imul    eax, dword ptr [b]
	imul    eax, dword ptr [c]
	mov     ecx, 17
	cdq
	idiv    ecx
	sub     esi, eax
	mov     eax, dword ptr [a]
	imul    eax, dword ptr [b]
	mov     ecx, 98
	cdq
	idiv    ecx
	mov     eax, edx
	mov     ecx, 2
	cdq
	idiv    ecx
	imul    eax, dword ptr [c]
	add     eax, 431
	sub     eax, 77
	mov     ecx, eax
	imul    eax, dword ptr [c], 343
	cdq
	idiv    dword ptr [q]
	imul    eax, edx, 232323
	cdq
	idiv    ecx
	mov     ecx, eax
	mov     eax, dword ptr [b]
	mov     edi, 9
	cdq
	idiv    edi
	add     eax, dword ptr [a]
	add     ecx, eax
	imul    esi, ecx
	mov     dword ptr [i], esi

	( 77 )
//====================================================================================
( MVC )

i = (54431 % ((a / b) * 31 * c / 1 + 721 % (7 * a) ) + 325 / (483 % (a*b*7)) * 21 + 87323 / (a + 43 %c) % 51 - 43*a*b*c/17 ) * (a + b/9 + c * 343 % q * 232323 / ( 431 + (a*b) % 98 / 2 * c - 77 ));

 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F8         idiv        eax,dword ptr [b] 
 8B C8            mov         ecx,eax 
 6B C9 1F         imul        ecx,ecx,1Fh 
 0F AF 4D F4      imul        ecx,dword ptr [c] 
 8B 75 FC         mov         esi,dword ptr [a] 
 6B F6 07         imul        esi,esi,7 
 B8 D1 02 00 00   mov         eax,2D1h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 03 CA            add         ecx,edx 
 B8 9F D4 00 00   mov         eax,0D49Fh 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 8B 75 FC         mov         esi,dword ptr [a] 
 0F AF 75 F8      imul        esi,dword ptr [b] 
 6B F6 07         imul        esi,esi,7 
 B8 E3 01 00 00   mov         eax,1E3h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 B8 45 01 00 00   mov         eax,145h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 6B C0 15         imul        eax,eax,15h 
 03 C8            add         ecx,eax 
 B8 2B 00 00 00   mov         eax,2Bh 
 99               cdq              
 F7 7D F4         idiv        eax,dword ptr [c] 
 8B F2            mov         esi,edx 
 03 75 FC         add         esi,dword ptr [a] 
 B8 1B 55 01 00   mov         eax,1551Bh 
 99               cdq              
 F7 FE            idiv        eax,esi 
 99               cdq              
 BE 33 00 00 00   mov         esi,33h 
 F7 FE            idiv        eax,esi 
 03 CA            add         ecx,edx 
 8B 45 FC         mov         eax,dword ptr [a] 
 6B C0 2B         imul        eax,eax,2Bh 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 0F AF 45 F4      imul        eax,dword ptr [c] 
 99               cdq              
 BE 11 00 00 00   mov         esi,11h 
 F7 FE            idiv        eax,esi 
 2B C8            sub         ecx,eax 
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 BE 09 00 00 00   mov         esi,9 
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 03 75 FC         add         esi,dword ptr [a] 
 8B 45 F4         mov         eax,dword ptr [c] 
 69 C0 57 01 00 00 imul        eax,eax,157h 
 99               cdq              
 F7 7D BC         idiv        eax,dword ptr [q] 
 8B FA            mov         edi,edx 
 69 FF 83 8B 03 00 imul        edi,edi,38B83h 
 8B 45 FC         mov         eax,dword ptr [a] 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 99               cdq              
 BB 62 00 00 00   mov         ebx,62h 
 F7 FB            idiv        eax,ebx 
 8B C2            mov         eax,edx 
 99               cdq              
 2B C2            sub         eax,edx 
 8B D8            mov         ebx,eax 
 D1 FB            sar         ebx,1 
 0F AF 5D F4      imul        ebx,dword ptr [c] 
 81 C3 62 01 00 00 add         ebx,162h 
 8B C7            mov         eax,edi 
 99               cdq              
 F7 FB            idiv        eax,ebx 
 03 F0            add         esi,eax 
 0F AF CE         imul        ecx,esi 
 89 4D B8         mov         dword ptr [i],ecx 

	( 77 )
//====================================================================================
( MVC )
	i = 1 / (a / (a / 2 + 2*b) + c*7);
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 2B C2            sub         eax,edx 
 D1 F8            sar         eax,1 
 8B 4D F8         mov         ecx,dword ptr [b] 
 8D 0C 48         lea         ecx,[eax+ecx*2] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 8B C8            mov         ecx,eax 
 8B 55 F4         mov         edx,dword ptr [c] 
 6B D2 07         imul        edx,edx,7 
 03 CA            add         ecx,edx 
 B8 01 00 00 00   mov         eax,1 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 45 DC         mov         dword ptr [i],eax 
	( 17 )
//====================================================================================
( C4 )
; i = 1 / (a / (a / 2 + 2 * b) + c * 7)

	mov     eax, dword ptr [a]
	mov     ecx, 2
	cdq
	idiv    ecx
	imul    ecx, dword ptr [b], 2
	add     eax, ecx				; <-
	mov     ecx, eax				; <- TODO: add ecx, eax
	mov     eax, dword ptr [a]
	cdq
	idiv    ecx
	imul    ecx, dword ptr [c], 7
	add     eax, ecx				; <-
	mov     ecx, eax				; <- TODO: add ecx, eax
	mov     eax, 1
	cdq
	idiv    ecx
	mov     dword ptr [i], eax

  ; 17 instructions

	( 2 instructions could have been saved. )


( C4 )
; i = 1 / (a / (a / 2 + 2 * b) + c * 7)

	mov     eax, dword ptr [a]
	shr     eax, 1
	mov     ecx, dword ptr [b]
	shl     ecx, 1
	add     eax, ecx
	mov     ecx, eax
	mov     eax, dword ptr [a]
	cdq
	idiv    ecx
	imul    ecx, dword ptr [c], 7
	add     eax, ecx
	mov     ecx, eax
	mov     eax, 1
	cdq
	idiv    ecx
	mov     dword ptr [i], eax

  ; 16 instruction(s)

//====================================================================================
( MVC )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	unsigned int  ua, ub, uc;

	i = 7*b % (uc/ua + 23 * uc*ua/ub);

 8B 4D F8         mov         ecx,dword ptr [b] 
 6B C9 07         imul        ecx,ecx,7 
 8B 45 A8         mov         eax,dword ptr [uc] 
 33 D2            xor         edx,edx 
 F7 75 B0         div         eax,dword ptr [ua] 
 8B F0            mov         esi,eax 
 8B 45 A8         mov         eax,dword ptr [uc] 
 6B C0 17         imul        eax,eax,17h 
 0F AF 45 B0      imul        eax,dword ptr [ua] 
 33 D2            xor         edx,edx 
 F7 75 AC         div         eax,dword ptr [ub] 
 03 F0            add         esi,eax 
 8B C1            mov         eax,ecx 
 33 D2            xor         edx,edx 
 F7 F6            div         eax,esi 
 89 55 B8         mov         dword ptr [i],edx 

	( 16 )
//====================================================================================
( C4 )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	unsigned int  ua, ub, uc;

	i = 7*b % (uc/ua + 23 * uc*ua/ub);
	
	imul    eax, dword ptr [uc], 23
	imul    eax, dword ptr [ua]
	xor     edx, edx
	div     dword ptr [ub]
	mov     ecx, eax
	mov     eax, dword ptr [uc]
	xor     edx, edx
	div     dword ptr [ua]
	add     ecx, eax
	imul    eax, dword ptr [b], 7
	cdq
	idiv    ecx
	mov     dword ptr [i], edx

		; 13 instruction(s)
//====================================================================================
( MVC )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	unsigned ua, ub, uc;
	char c1, c2, c3;
	
	c1 = 7 + a * a * 443 % (434 / (b % 3 + 1));
 
 8B 4D FC         mov         ecx,dword ptr [a] 
 0F AF 4D FC      imul        ecx,dword ptr [a] 
 69 C9 BB 01 00 00 imul        ecx,ecx,1BBh 
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 83 C6 01         add         esi,1 
 B8 B2 01 00 00   mov         eax,1B2h 
 99               cdq              
 F7 FE            idiv        eax,esi 
 8B F0            mov         esi,eax 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 83 C2 07         add         edx,7 
 88 55 B7         mov         byte ptr [c1],dl 
	
	( 17 )
//====================================================================================
( MVC )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	unsigned ua, ub, uc;
	char c1, c2, c3;
	
	c1 = 7 + c2 * c1 * 443 % (c3 % 3 + 1);
	
 0F BE 4D B6      movsx       ecx,byte ptr [c2] 
 0F BE 55 B7      movsx       edx,byte ptr [c1] 
 0F AF CA         imul        ecx,edx 
 69 C9 BB 01 00 00 imul        ecx,ecx,1BBh 
 0F BE 45 B5      movsx       eax,byte ptr [c3] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 83 C6 01         add         esi,1 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 83 C2 07         add         edx,7 
 88 55 B7         mov         byte ptr [c1],dl 
	( 15 )
//====================================================================================
( MVC )
	int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q;
	unsigned ua, ub, uc;
	char c1, c2, c3;
	
	i = ua = c1 = c2 * (c1 = ua ) * 443 % (c3 % 3 + 1);

 8A 45 B0         mov         al,byte ptr [ua] 
 88 45 B7         mov         byte ptr [c1],al 
 0F BE 45 B5      movsx       eax,byte ptr [c3] 
 99               cdq              
 B9 03 00 00 00   mov         ecx,3 
 F7 F9            idiv        eax,ecx 
 8B CA            mov         ecx,edx 
 83 C1 01         add         ecx,1 
 0F BE 55 B7      movsx       edx,byte ptr [c1] 
 0F BE 45 B6      movsx       eax,byte ptr [c2] 
 0F AF C2         imul        eax,edx 
 69 C0 BB 01 00 00 imul        eax,eax,1BBh 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 88 55 B7         mov         byte ptr [c1],dl 
 0F BE 45 B7      movsx       eax,byte ptr [c1] 
 89 45 B0         mov         dword ptr [ua],eax 
 8B 4D B0         mov         ecx,dword ptr [ua] 
 89 4D DC         mov         dword ptr [i],ecx 
	( 18 )
//====================================================================================
( MVC )
	a = c1 = a / c3 + 5 * (c1 = ua);
 8A 45 B0         mov         al,byte ptr [ua] 
 88 45 B7         mov         byte ptr [c1],al 
 0F BE 4D B7      movsx       ecx,byte ptr [c1] 
 6B C9 05         imul        ecx,ecx,5 
 0F BE 75 B5      movsx       esi,byte ptr [c3] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 FE            idiv        eax,esi 
 03 C1            add         eax,ecx 
 88 45 B7         mov         byte ptr [c1],al 
 0F BE 55 B7      movsx       edx,byte ptr [c1] 
 89 55 FC         mov         dword ptr [a],edx 
	( 11 )
//====================================================================================

	char  c1, c2, c3;
	unsigned char uchar1, uchar2;
	unsigned  ua = 2, ub = 3, uc = 7;
	
 C7 45 AC 02 00 00 00 mov         dword ptr [ua],2 
 C7 45 A8 03 00 00 00 mov         dword ptr [ub],3 
 C7 45 A4 07 00 00 00 mov         dword ptr [uc],7 
 
	long l1, l2, l3;
	long long int  ll;
	signed float f1, f2, f3;
	unsigned double d1, d2, d3;

	//-----------------------------------
	
??! Why 'signed floats' behave like ordinary 32-bit integers ?
	
	f1 = f2;	
 8B 45 88         mov         eax,dword ptr [f2] 
 89 45 8C         mov         dword ptr [f1],eax 
 
	f1 = i;	
 8B 45 DC         mov         eax,dword ptr [i] 
 89 45 8C         mov         dword ptr [f1],eax 
 
	i = f1;
 8B 45 8C         mov         eax,dword ptr [f1] 
 89 45 DC         mov         dword ptr [i],eax 
 
	c1 = f1;
 8A 45 8C         mov         al,byte ptr [f1] 
 88 45 B7         mov         byte ptr [c1],al 
 
	f1 = c1;
 0F BE 45 B7      movsx       eax,byte ptr [c1] 
 89 45 8C         mov         dword ptr [f1],eax 

	f1 = f2 + f3;
 8B 45 88         mov         eax,dword ptr [f2] 
 03 45 84         add         eax,dword ptr [f3] 
 89 45 8C         mov         dword ptr [f1],eax 
 
	f1 = i * f3;
 8B 45 DC         mov         eax,dword ptr [i] 
 0F AF 45 84      imul        eax,dword ptr [f3] 
 89 45 8C         mov         dword ptr [f1],eax 
 
	i = f1 / f3;
 8B 45 8C         mov         eax,dword ptr [f1] 
 99               cdq              
 F7 7D 84         idiv        eax,dword ptr [f3] 
 89 45 DC         mov         dword ptr [i],eax 
 
	c1 = f1 + i + ua / uc;
 8B 4D 8C         mov         ecx,dword ptr [f1] 
 03 4D DC         add         ecx,dword ptr [i] 
 8B 45 AC         mov         eax,dword ptr [ua] 
 33 D2            xor         edx,edx 
 F7 75 A4         div         eax,dword ptr [uc] 
 03 C8            add         ecx,eax 
 88 4D B7         mov         byte ptr [c1],cl 
 
	f1 = c1 * c3;
 0F BE 45 B7      movsx       eax,byte ptr [c1] 
 0F BE 4D B5      movsx       ecx,byte ptr [c3] 
 0F AF C1         imul        eax,ecx 
 89 45 8C         mov         dword ptr [f1],eax 

//====================================================================================
	char  c1, c2, c3;
	unsigned char uchar1, uchar2;
	unsigned  ua, ub, uc;
	long l1, l2, l3;
	long long int  ll;
	
	float    f1, f2, f3;
	double   d1, d2, d3;

	f1 = f2 + f3;
 D9 45 88         fld         dword ptr [f2] 
 D8 45 84         fadd        dword ptr [f3] 
 D9 5D 8C         fstp        dword ptr [f1] 
	f1 = i * f3;
 DB 45 DC         fild        dword ptr [i] 
 D8 4D 84         fmul        dword ptr [f3] 
 D9 5D 8C         fstp        dword ptr [f1] 
	i = f1 / f3;
 D9 45 8C         fld         dword ptr [f1] 
 D8 75 84         fdiv        dword ptr [f3] 
 E8 FA EB FF FF   call        @ILT+1415(__ftol2_sse) (41258Ch) 
 89 45 DC         mov         dword ptr [i],eax 
	c1 = f1 + i + ua / uc;
 DB 45 DC         fild        dword ptr [i] 
 D8 45 8C         fadd        dword ptr [f1] 
 8B 45 AC         mov         eax,dword ptr [ua] 
 33 D2            xor         edx,edx 
 F7 75 A4         div         eax,dword ptr [uc] 
 89 85 24 FF FF FF mov         dword ptr [ebp-0DCh],eax 
 C7 85 28 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0D8h],0 
 DF AD 24 FF FF FF fild        qword ptr [ebp-0DCh] 
 DE C1            faddp       st(1),st 
 E8 CC EB FF FF   call        @ILT+1415(__ftol2_sse) (41258Ch) 
 88 45 B7         mov         byte ptr [c1],al 
	f1 = c1 * c3;
 0F BE 45 B7      movsx       eax,byte ptr [c1] 
 0F BE 4D B5      movsx       ecx,byte ptr [c3] 
 0F AF C1         imul        eax,ecx 
 89 85 28 FF FF FF mov         dword ptr [ebp-0D8h],eax 
 DB 85 28 FF FF FF fild        dword ptr [ebp-0D8h] 
 D9 5D 8C         fstp        dword ptr [f1] 
 
//====================================================================================
( MVC )
	i = c * d + a / 128 * 8 + 434 * a * b * 2;
	
 8B 4D F4         mov         ecx,dword ptr [c] 
 0F AF 4D F0      imul        ecx,dword ptr [d] 
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 83 E2 7F         and         edx,7Fh 
 03 C2            add         eax,edx 
 C1 F8 07         sar         eax,7 
 8D 14 C1         lea         edx,[ecx+eax*8] 
 8B 45 FC         mov         eax,dword ptr [a] 
 69 C0 B2 01 00 00 imul        eax,eax,1B2h 
 0F AF 45 F8      imul        eax,dword ptr [b] 
 8D 0C 42         lea         ecx,[edx+eax*2] 
 89 4D DC         mov         dword ptr [i],ecx 
	( 13 )
//====================================================================================
( C4 )
; i = (c * d + (a / 128) * 8) + ((434 * a) * b) * 2

	mov     eax, dword ptr [a]
	shr     eax, 7
	mov     ecx, dword ptr [c]
	imul    ecx, dword ptr [d]
	lea     esi, [eax*8 + ecx]
	imul    eax, dword ptr [a], 434
	imul    eax, dword ptr [b]
	shl     eax, 1
	add     esi, eax
	mov     dword ptr [i], esi

	  ; 10 instruction(s)
//====================================================================================
( MVC )
	char  c1, c2, c3;
	unsigned char uchar1, uchar2;
	long l1, l2, l3;
	long long int  ll;
	float f1, f2, f3;
	double d1, d2, d3;

	f1 = f2 / f3;
 D9 45 88         fld         dword ptr [f2] 
 D8 75 84         fdiv        dword ptr [f3] 
 D9 5D 8C         fstp        dword ptr [f1] 
 
	i = (f1 - f3)*67 + c2/f1;
 D9 45 8C         fld         dword ptr [f1] 
 D8 65 84         fsub        dword ptr [f3] 
 DC 0D 10 5C 43 00 fmul        qword ptr [__real@4050c00000000000 (435C10h)] 
 0F BE 45 B6      movsx       eax,byte ptr [c2] 
 89 85 28 FF FF FF mov         dword ptr [ebp-0D8h],eax 
 DB 85 28 FF FF FF fild        dword ptr [ebp-0D8h] 
 D8 75 8C         fdiv        dword ptr [f1] 
 DE C1            faddp       st(1),st 
 E8 DF EB FF FF   call        @ILT+1415(__ftol2_sse) (41258Ch) 
 89 45 DC         mov         dword ptr [i],eax 
( 10 )
	
	i2 = ((b + m) + 9) + c / 3;
 8B 4D F8         mov         ecx,dword ptr [b] 
 03 4D CC         add         ecx,dword ptr [m] 
 8B 45 F4         mov         eax,dword ptr [c] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8D 54 01 09      lea         edx,[ecx+eax+9] 
 89 55 B8         mov         dword ptr [i2],edx 
	( 8 )
//====================================================================================
	e = f + g / i * j + 434 - c1;
 8B 45 E4         mov         eax,dword ptr [g] 
 99               cdq              
 F7 7D DC         idiv        eax,dword ptr [i] 
 0F AF 45 D8      imul        eax,dword ptr [j] 
 8B 4D E8         mov         ecx,dword ptr [f] 
 8D 94 01 B2 01 00 00 lea         edx,[ecx+eax+1B2h] 
 0F BE 45 B7      movsx       eax,byte ptr [c1] 
 2B D0            sub         edx,eax 
 89 55 EC         mov         dword ptr [e],edx 
	( 9 )
//====================================================================================

( right from the book: )

				Absolute value macro

#define ABS(x) (((x)>0)?(x):-(x))

When the ABS() macro is used on a 16-bit integer, the generated code without optimizations looks like the following:

Code generated by absolute value macro without optimizations
    cmp variable reference,OFFSET 0  ;; is number negative?
    jle L1                           ;; .yes, handle neg number
    mov ax, variable reference       ;; no, get number
    jmp L2                           ;; .and exit
L1: mov ax, variable reference       ;; get negative number
    neg ax                           ;; .and make positive
L2:

When the ABS() macro is used on a 16-bit integer,
the generated code with optimizations looks like the following:

Code generated by absolute value macro with /Os optimizations
1.  mov  ax, variable reference      ;; get number
2.  cwd                              ;; sign extend
3.  xor  ax,dx                       ;; if number is positive, do
4.  sub  ax,dx                       ;; .nothing, otherwise negate

This optimized assembly code is a work of art.
In step 1, the variable is moved into register ax. Step 2 sign extends ax into dx.
So, if the number is positive, dx gets set to 0; otherwise the number is negative
and dx gets set to all bits turned on (0xFFFF; negative 1).
Provided the number is positive, dx contains 0, so steps 3 and 4 leave the number unchanged.
However, if the number is negative, dx contains 0xFFFF, so steps 3 and 4 perform a two's complement,
which negates the number.

//====================================================================================

	i = !a;
 33 C0            xor         eax,eax 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C0         sete        al   
 89 45 DC         mov         dword ptr [i],eax 
 
	i = c % !b;
 33 C9            xor         ecx,ecx 
 83 7D F8 00      cmp         dword ptr [b],0 
 0F 94 C1         sete        cl   
 8B 45 F4         mov         eax,dword ptr [c] 
 99               cdq              
 F7 F9            idiv        eax,ecx 
 89 55 DC         mov         dword ptr [i],edx 
(7)

	i = a / c % !(b % 3 );
 8B 45 FC         mov         eax,dword ptr [a] 
 99               cdq              
 F7 7D F4         idiv        eax,dword ptr [c] 
 8B C8            mov         ecx,eax 
 8B 45 F8         mov         eax,dword ptr [b] 
 99               cdq              
 BE 03 00 00 00   mov         esi,3 
 F7 FE            idiv        eax,esi 
 8B F2            mov         esi,edx 
 F7 DE            neg         esi  
 1B F6            sbb         esi,esi 
 83 C6 01         add         esi,1 
 8B C1            mov         eax,ecx 
 99               cdq              
 F7 FE            idiv        eax,esi 
 89 55 DC         mov         dword ptr [i],edx 
( 15 )

	i = a / c % !( f1 );
00412668 	D9 45 8C         fld         dword ptr [f1] 
0041266B 	DC 1D 60 E9 42 00 fcomp       qword ptr [__real@0000000000000000 (42E960h)] 
00412671 	DF E0            fnstsw      ax   
00412673 	F6 C4 44         test        ah,44h 
00412676 	7A 0C            jp          main+0F4h (412684h) 
00412678 	C7 85 24 FF FF FF 01 00 00 00 mov         dword ptr [ebp-0DCh],1 
00412682 	EB 0A            jmp         main+0FEh (41268Eh) 
00412684 	C7 85 24 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0DCh],0 
0041268E 	8B 45 FC         mov         eax,dword ptr [a] 
00412691 	99               cdq              
00412692 	F7 7D F4         idiv        eax,dword ptr [c] 
00412695 	99               cdq              
00412696 	F7 BD 24 FF FF FF idiv        eax,dword ptr [ebp-0DCh] 
0041269C 	89 55 DC         mov         dword ptr [i],edx 
 ( 13 )
//====================================================================================
	i = a > b;
00412305 8B 45 FC         mov         eax,dword ptr [a] 
00412308 33 C9            xor         ecx,ecx 
0041230A 3B 45 F8         cmp         eax,dword ptr [b] 
0041230D 0F 9F C1         setg        cl   
00412310 89 4D DC         mov         dword ptr [i],ecx 
	i = a >= b;
00412313 8B 45 FC         mov         eax,dword ptr [a] 
00412316 33 C9            xor         ecx,ecx 
00412318 3B 45 F8         cmp         eax,dword ptr [b] 
0041231B 0F 9D C1         setge       cl   
0041231E 89 4D DC         mov         dword ptr [i],ecx 
	i = 3*a + b*c + (a >= b) + 34 % c;
00412321 8B 4D FC         mov         ecx,dword ptr [a] 
00412324 6B C9 03         imul        ecx,ecx,3 
00412327 8B 55 F8         mov         edx,dword ptr [b] 
0041232A 0F AF 55 F4      imul        edx,dword ptr [c] 
0041232E 03 CA            add         ecx,edx 
00412330 8B 45 FC         mov         eax,dword ptr [a] 
00412333 33 D2            xor         edx,edx 
00412335 3B 45 F8         cmp         eax,dword ptr [b] 
00412338 0F 9D C2         setge       dl   
0041233B 03 CA            add         ecx,edx 
0041233D B8 22 00 00 00   mov         eax,22h 
00412342 99               cdq              
00412343 F7 7D F4         idiv        eax,dword ptr [c] 
00412346 03 CA            add         ecx,edx 
00412348 89 4D DC         mov         dword ptr [i],ecx 
(14)

	i = ((a <= b) && (d = e));
0041234B 8B 45 FC         mov         eax,dword ptr [a] 
0041234E 3B 45 F8         cmp         eax,dword ptr [b] 
00412351 7F 18            jg          main+0FBh (41236Bh) 
00412353 8B 4D EC         mov         ecx,dword ptr [e] 
00412356 89 4D F0         mov         dword ptr [d],ecx 
00412359 83 7D F0 00      cmp         dword ptr [d],0 
0041235D 74 0C            je          main+0FBh (41236Bh) 
0041235F C7 85 24 FF FF FF 01 00 00 00 mov         dword ptr [ebp-0DCh],1 
00412369 EB 0A            jmp         main+105h (412375h) 
0041236B C7 85 24 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0DCh],0 
00412375 8B 95 24 FF FF FF mov         edx,dword ptr [ebp-0DCh] 
0041237B 89 55 DC         mov         dword ptr [i],edx 
	i = ((a <= b) || (d = e));
0041237E 8B 45 FC         mov         eax,dword ptr [a] 
00412381 3B 45 F8         cmp         eax,dword ptr [b] 
00412384 7E 18            jle         main+12Eh (41239Eh) 
00412386 8B 4D EC         mov         ecx,dword ptr [e] 
00412389 89 4D F0         mov         dword ptr [d],ecx 
0041238C 83 7D F0 00      cmp         dword ptr [d],0 
00412390 75 0C            jne         main+12Eh (41239Eh) 
00412392 C7 85 24 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0DCh],0 
0041239C EB 0A            jmp         main+138h (4123A8h) 
0041239E C7 85 24 FF FF FF 01 00 00 00 mov         dword ptr [ebp-0DCh],1 
004123A8 8B 95 24 FF FF FF mov         edx,dword ptr [ebp-0DCh] 
004123AE 89 55 DC         mov         dword ptr [i],edx 


	c3 = ((a == d)%3 == 1);
 8B 45 FC         mov         eax,dword ptr [a] 
 33 C9            xor         ecx,ecx 
 3B 45 F0         cmp         eax,dword ptr [d] 
 0F 94 C1         sete        cl   
 8B C1            mov         eax,ecx 
 99               cdq              
 B9 03 00 00 00   mov         ecx,3 
 F7 F9            idiv        eax,ecx 
 83 FA 01         cmp         edx,1 
 0F 94 C2         sete        dl   
 88 55 B5         mov         byte ptr [c3],dl 
 ( 11 )
//====================================================================================
( C4 )
	c3 = ((a == d)%3 == 1);
	
	mov     eax, dword ptr [a]
	xor     ecx, ecx
	cmp     eax, dword ptr [d]
	sete    cl
	mov     eax, ecx
	mov     ecx, 3
	cdq
	idiv    ecx
	xor     ecx, ecx
	cmp     edx, 1
	sete    cl
	mov     byte ptr [c3], cl

  ; 12 instruction(s)

//====================================================================================
	i = ((a == d)%3 == 1);
 8B 45 FC         mov         eax,dword ptr [a] 
 33 C9            xor         ecx,ecx 
 3B 45 F0         cmp         eax,dword ptr [d] 
 0F 94 C1         sete        cl   
 8B C1            mov         eax,ecx 
 99               cdq              
 B9 03 00 00 00   mov         ecx,3 
 F7 F9            idiv        eax,ecx 
 83 EA 01         sub         edx,1 
 F7 DA            neg         edx  
 1B D2            sbb         edx,edx 
 83 C2 01         add         edx,1 
 89 55 DC         mov         dword ptr [i],edx 
 ( 13 )
//====================================================================================
	i = ((a == d)*7 == 1);
 8B 45 FC         mov         eax,dword ptr [a] 
 33 C9            xor         ecx,ecx 
 3B 45 F0         cmp         eax,dword ptr [d] 
 0F 94 C1         sete        cl   
 6B C9 07         imul        ecx,ecx,7 
 83 E9 01         sub         ecx,1 
 F7 D9            neg         ecx  
 1B C9            sbb         ecx,ecx 
 83 C1 01         add         ecx,1 
 89 4D DC         mov         dword ptr [i],ecx 
 ( 10 )
//====================================================================================
	i = ((a < d)*7 > 1);
 8B 45 FC         mov         eax,dword ptr [a] 
 33 C9            xor         ecx,ecx 
 3B 45 F0         cmp         eax,dword ptr [d] 
 0F 9C C1         setl        cl   
 6B C9 07         imul        ecx,ecx,7 
 33 D2            xor         edx,edx 
 83 F9 01         cmp         ecx,1 
 0F 9F C2         setg        dl   
 89 55 DC         mov         dword ptr [i],edx 
 ( 9 )
//====================================================================================
	i = f1 == f2;
00412625 D9 45 8C         fld         dword ptr [f1] 
00412628 D9 45 88         fld         dword ptr [f2] 
0041262B DA E9            fucompp          
0041262D DF E0            fnstsw      ax   
0041262F F6 C4 44         test        ah,44h 
00412632 7A 0C            jp          main+0B0h (412640h) 
00412634 C7 85 24 FF FF FF 01 00 00 00 mov         dword ptr [ebp-0DCh],1 
0041263E EB 0A            jmp         main+0BAh (41264Ah) 
00412640 C7 85 24 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0DCh],0 
0041264A 8B 85 24 FF FF FF mov         eax,dword ptr [ebp-0DCh] 
00412650 89 45 DC         mov         dword ptr [i],eax 
//====================================================================================
	bool b1; int i;

	b1 = i;
 83 7D DC 00      cmp         dword ptr [i],0 
 0F 95 C0         setne       al   
 88 85 67 FF FF FF mov         byte ptr [b1],al 
//=====================================================================================
( MVC )
	i = (~a|b*4%d<<l%p+31*c*88-!a<0+11+k);

 8B 75 FC         mov         esi,dword ptr [a] 
 F7 D6            not         esi  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B FA            mov         edi,edx 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 45 F4         mov         eax,dword ptr [c] 
 6B C0 1F         imul        eax,eax,1Fh 
 6B C0 58         imul        eax,eax,58h 
 03 D0            add         edx,eax 
 33 C9            xor         ecx,ecx 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C1         sete        cl   
 2B D1            sub         edx,ecx 
 8B CA            mov         ecx,edx 
 D3 E7            shl         edi,cl 
 8B 55 D4         mov         edx,dword ptr [k] 
 83 C2 0B         add         edx,0Bh 
 33 C0            xor         eax,eax 
 3B FA            cmp         edi,edx 
 0F 9C C0         setl        al   
 0B F0            or          esi,eax 
 89 75 B8         mov         dword ptr [i],esi 
( 27 )
//====================================================================================
( C4 )
	i = (~a|b*4%d<<l%p+31*c*88-!a<0+11+k);
	
	imul    eax, dword ptr [c], 31  ; r32 : mul( mem, imm ), (50)
	imul    ecx, eax, 88    ; r32 : mul( r32, imm ), (47)
	mov     eax, dword ptr [l]      ; r32 : mem, (31)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (53)
	add     ecx, edx        ; r32 : add( r32, mrc ), (35)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (79)
	sub     ecx, eax        ; r32 : sub( r32, mrc ), (42)
	mov     eax, dword ptr [b]      ; r32 : mem, (31)
	shl     eax, 2  ; r32 : mul( r32, iconst_4 ), (61)
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (53)
	shl     edx, cl ; r32 : shl( r32, r32 ), (55)
	mov     eax, dword ptr [k]      ; r32 : mem, (31)
	mov     ecx, 0  ; r32 : imm, (30)
	lea     esi, [ecx + eax + 11]   ; r32 : add( add, r32 ), (40)
	xor     eax, eax
	cmp     edx, esi
	setl    al      ; r32 : lt( r32, mrc ), (82)
	mov     ecx, dword ptr [a]      ; r32 : mem, (31)
	not     ecx     ; r32 : compl( r32 ), (73)
	or      eax, ecx        ; r32 : or( r32, mrc ), (71)
	mov     dword ptr [i], eax      ; rc : assign( address, rc ), (32)
( 25 )
//====================================================================================
( MVC )
 i2 = (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)*4243*(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)+e<<32*f*a&3
 - (~a|b*4%d<<l%p+31*c*88-!a<0+11+k) * (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)&(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)
 +(~a|b*4%d<<l%p+31*c*88-!a<0+11+k);
 
 8B 75 FC         mov         esi,dword ptr [a] 
 F7 D6            not         esi  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B FA            mov         edi,edx 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 45 F4         mov         eax,dword ptr [c] 
 6B C0 1F         imul        eax,eax,1Fh 
 6B C0 58         imul        eax,eax,58h 
 03 D0            add         edx,eax 
 33 C9            xor         ecx,ecx 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C1         sete        cl   
 2B D1            sub         edx,ecx 
 8B CA            mov         ecx,edx 
 D3 E7            shl         edi,cl 
 8B 55 D4         mov         edx,dword ptr [k] 
 83 C2 0B         add         edx,0Bh 
 33 C0            xor         eax,eax 
 3B FA            cmp         edi,edx 
 0F 9C C0         setl        al   
 0B F0            or          esi,eax 
 69 F6 93 10 00 00 imul        esi,esi,1093h 
 8B 7D FC         mov         edi,dword ptr [a] 
 F7 D7            not         edi  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B DA            mov         ebx,edx 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 4D F4         mov         ecx,dword ptr [c] 
 6B C9 1F         imul        ecx,ecx,1Fh 
 6B C9 58         imul        ecx,ecx,58h 
 03 D1            add         edx,ecx 
 33 C0            xor         eax,eax 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C0         sete        al   
 2B D0            sub         edx,eax 
 8B CA            mov         ecx,edx 
 D3 E3            shl         ebx,cl 
 8B 4D D4         mov         ecx,dword ptr [k] 
 83 C1 0B         add         ecx,0Bh 
 33 D2            xor         edx,edx 
 3B D9            cmp         ebx,ecx 
 0F 9C C2         setl        dl   
 0B FA            or          edi,edx 
 0F AF F7         imul        esi,edi 
 03 75 EC         add         esi,dword ptr [e] 
 8B 4D E8         mov         ecx,dword ptr [f] 
 C1 E1 05         shl         ecx,5 
 0F AF 4D FC      imul        ecx,dword ptr [a] 
 D3 E6            shl         esi,cl 
 8B 7D FC         mov         edi,dword ptr [a] 
 F7 D7            not         edi  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B DA            mov         ebx,edx 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 45 F4         mov         eax,dword ptr [c] 
 6B C0 1F         imul        eax,eax,1Fh 
 6B C0 58         imul        eax,eax,58h 
 03 D0            add         edx,eax 
 33 C9            xor         ecx,ecx 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C1         sete        cl   
 2B D1            sub         edx,ecx 
 8B CA            mov         ecx,edx 
 D3 E3            shl         ebx,cl 
 8B 55 D4         mov         edx,dword ptr [k] 
 83 C2 0B         add         edx,0Bh 
 33 C0            xor         eax,eax 
 3B DA            cmp         ebx,edx 
 0F 9C C0         setl        al   
 0B F8            or          edi,eax 
 8B 5D FC         mov         ebx,dword ptr [a] 
 F7 D3            not         ebx  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B C2            mov         eax,edx 
 89 85 20 FF FF FF mov         dword ptr [ebp-0E0h],eax 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 4D F4         mov         ecx,dword ptr [c] 
 6B C9 1F         imul        ecx,ecx,1Fh 
 6B C9 58         imul        ecx,ecx,58h 
 03 D1            add         edx,ecx 
 33 C0            xor         eax,eax 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C0         sete        al   
 2B D0            sub         edx,eax 
 8B CA            mov         ecx,edx 
 8B 85 20 FF FF FF mov         eax,dword ptr [ebp-0E0h] 
 D3 E0            shl         eax,cl 
 8B 4D D4         mov         ecx,dword ptr [k] 
 83 C1 0B         add         ecx,0Bh 
 33 D2            xor         edx,edx 
 3B C1            cmp         eax,ecx 
 0F 9C C2         setl        dl   
 0B DA            or          ebx,edx 
 0F AF FB         imul        edi,ebx 
 B8 03 00 00 00   mov         eax,3 
 2B C7            sub         eax,edi 
 23 F0            and         esi,eax 
 8B 7D FC         mov         edi,dword ptr [a] 
 F7 D7            not         edi  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B DA            mov         ebx,edx 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 4D F4         mov         ecx,dword ptr [c] 
 6B C9 1F         imul        ecx,ecx,1Fh 
 6B C9 58         imul        ecx,ecx,58h 
 03 D1            add         edx,ecx 
 33 C0            xor         eax,eax 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C0         sete        al   
 2B D0            sub         edx,eax 
 8B CA            mov         ecx,edx 
 D3 E3            shl         ebx,cl 
 8B 4D D4         mov         ecx,dword ptr [k] 
 83 C1 0B         add         ecx,0Bh 
 33 D2            xor         edx,edx 
 3B D9            cmp         ebx,ecx 
 0F 9C C2         setl        dl   
 0B FA            or          edi,edx 
 8B 5D FC         mov         ebx,dword ptr [a] 
 F7 D3            not         ebx  
 8B 45 F8         mov         eax,dword ptr [b] 
 C1 E0 02         shl         eax,2 
 99               cdq              
 F7 7D F0         idiv        eax,dword ptr [d] 
 8B C2            mov         eax,edx 
 89 85 1C FF FF FF mov         dword ptr [ebp-0E4h],eax 
 8B 45 D0         mov         eax,dword ptr [l] 
 99               cdq              
 F7 7D C0         idiv        eax,dword ptr [p] 
 8B 45 F4         mov         eax,dword ptr [c] 
 6B C0 1F         imul        eax,eax,1Fh 
 6B C0 58         imul        eax,eax,58h 
 03 D0            add         edx,eax 
 33 C9            xor         ecx,ecx 
 83 7D FC 00      cmp         dword ptr [a],0 
 0F 94 C1         sete        cl   
 2B D1            sub         edx,ecx 
 8B CA            mov         ecx,edx 
 8B 85 1C FF FF FF mov         eax,dword ptr [ebp-0E4h] 
 D3 E0            shl         eax,cl 
 8B 55 D4         mov         edx,dword ptr [k] 
 83 C2 0B         add         edx,0Bh 
 33 C9            xor         ecx,ecx 
 3B C2            cmp         eax,edx 
 0F 9C C1         setl        cl   
 0B D9            or          ebx,ecx 
 03 FB            add         edi,ebx 
 23 F7            and         esi,edi 
 89 75 B8         mov         dword ptr [i2],esi 
( 173 )
//====================================================================================
( C4 )
i = (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)*4243*(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)+e<<32*f*a&3
 - (~a|b*4%d<<l%p+31*c*88-!a<0+11+k) * (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)&(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)
 +(~a|b*4%d<<l%p+31*c*88-!a<0+11+k);

	imul    eax, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    ecx, eax, 88    ; r32 : mul( r32, imm ), (48)
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     ecx, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     ecx, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, dword ptr [b]      ; r32 : mem, (32)
	shl     eax, 2  ; r32 : mul( r32, iconst_4 ), (62)
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     esi, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, esi
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	imul    ecx, eax, 4243  ; r32 : mul( r32, imm ), (48)
	imul    eax, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    esi, eax, 88    ; r32 : mul( r32, imm ), (48)
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     esi, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     esi, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, ecx
	mov     ecx, esi
	mov     esi, dword ptr [b]      ; r32 : mem, (32)
	shl     esi, 2  ; r32 : mul( r32, iconst_4 ), (62)
	mov     edi, eax
	mov     eax, esi
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     esi, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, esi
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	imul    edi, eax        ; r32 : mul( r32, mrc ), (50)
	add     edi, dword ptr [e]      ; r32 : add( r32, mrc ), (36)
	mov     eax, dword ptr [f]      ; r32 : mem, (32)
	shl     eax, 5  ; r32 : shl( r32, imm ), (55)
	imul    eax, dword ptr [a]      ; r32 : mul( r32, mrc ), (50)
	mov     ecx, eax
	shl     edi, cl ; r32 : shl( r32, r32 ), (56)
	imul    eax, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    ecx, eax, 88    ; r32 : mul( r32, imm ), (48)
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     ecx, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     ecx, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, dword ptr [b]      ; r32 : mem, (32)
	shl     eax, 2  ; r32 : mul( r32, iconst_4 ), (62)
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     esi, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, esi
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	imul    ecx, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    esi, ecx, 88    ; r32 : mul( r32, imm ), (48)
	mov     ecx, eax
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     esi, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     esi, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, ecx
	mov     ecx, esi
	mov     esi, dword ptr [b]      ; r32 : mem, (32)
	shl     esi, 2  ; r32 : mul( r32, iconst_4 ), (62)
	mov     edx, eax
	mov     eax, esi
	mov     esi, edx
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     ebx, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, ebx
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	imul    esi, eax        ; r32 : mul( r32, mrc ), (50)
	mov     eax, 3  ; r32 : imm, (30)
	sub     eax, esi        ; r32 : sub( r32, mrc ), (43)
	and     edi, eax        ; r32 : and( r32, mrc ), (71)
	imul    eax, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    ecx, eax, 88    ; r32 : mul( r32, imm ), (48)
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     ecx, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     ecx, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, dword ptr [b]      ; r32 : mem, (32)
	shl     eax, 2  ; r32 : mul( r32, iconst_4 ), (62)
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     esi, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, esi
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	imul    ecx, dword ptr [c], 31  ; r32 : mul( mem, imm ), (51)
	imul    esi, ecx, 88    ; r32 : mul( r32, imm ), (48)
	mov     ecx, eax
	mov     eax, dword ptr [l]      ; r32 : mem, (32)
	cdq
	idiv    dword ptr [p]   ; r32 : rem( r32, mr ), (54)
	add     esi, edx        ; r32 : add( r32, mrc ), (36)
	xor     eax, eax
	cmp     dword ptr [a], 0
	sete    al      ; r32 : eq( mem, rc ), (80)
	sub     esi, eax        ; r32 : sub( r32, mrc ), (43)
	mov     eax, ecx
	mov     ecx, esi
	mov     esi, dword ptr [b]      ; r32 : mem, (32)
	shl     esi, 2  ; r32 : mul( r32, iconst_4 ), (62)
	mov     edx, eax
	mov     eax, esi
	mov     esi, edx
	cdq
	idiv    dword ptr [d]   ; r32 : rem( r32, mr ), (54)
	shl     edx, cl ; r32 : shl( r32, r32 ), (56)
	mov     eax, dword ptr [k]      ; r32 : mem, (32)
	xor     ecx, ecx        ; r32 : iconst_0, (31)
	lea     ebx, [ecx + eax + 11]   ; r32 : add( add, r32 ), (41)
	xor     eax, eax
	cmp     edx, ebx
	setl    al      ; r32 : lt( r32, mrc ), (83)
	mov     ecx, dword ptr [a]      ; r32 : mem, (32)
	not     ecx     ; r32 : compl( r32 ), (74)
	or      eax, ecx        ; r32 : or( r32, mrc ), (72)
	add     esi, eax        ; r32 : add( r32, mrc ), (36)
	and     edi, esi        ; r32 : and( r32, mrc ), (71)
	mov     dword ptr [i], edi      ; rc : assign( address, rc ), (33)
( 175 )
//====================================================================================
( LCC 4.2 )
i = (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)*4243*(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)+e<<32*f*a&3
 - (~a|b*4%d<<l%p+31*c*88-!a<0+11+k) * (~a|b*4%d<<l%p+31*c*88-!a<0+11+k)&(~a|b*4%d<<l%p+31*c*88-!a<0+11+k)
 +(~a|b*4%d<<l%p+31*c*88-!a<0+11+k);
 
	 mov edi,dword ptr (-4)[ebp]
	cmp edi,0
	jne L16
	mov dword ptr (-48)[ebp],1
	jmp L17
	L16:
	mov dword ptr (-48)[ebp],0
	L17:
	mov esi,dword ptr (-8)[ebp]
	lea eax,[esi*4]
	mov esi,dword ptr (-16)[ebp]
	cdq
	idiv esi
	mov dword ptr (-92)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov esi,dword ptr (-28)[ebp]
	cdq
	idiv esi
	imul esi,dword ptr (-12)[ebp],31
	imul esi,esi,88
	lea esi,[esi][edx]
	sub esi,dword ptr (-48)[ebp]
	mov ebx,dword ptr (-92)[ebp]
	mov ecx,esi
	sal ebx,cl
	mov esi,dword ptr (-20)[ebp]
	lea esi,(11)[esi]
	cmp ebx,esi
	jge L14
	mov dword ptr (-44)[ebp],1
	jmp L15
	L14:
	mov dword ptr (-44)[ebp],0
	L15:
	mov esi,dword ptr (-4)[ebp]
	cmp esi,0
	jne L20
	mov dword ptr (-56)[ebp],1
	jmp L21
	L20:
	mov dword ptr (-56)[ebp],0
	L21:
	mov ebx,dword ptr (-8)[ebp]
	lea eax,[ebx*4]
	mov ebx,dword ptr (-16)[ebp]
	cdq
	idiv ebx
	mov dword ptr (-96)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ebx,dword ptr (-28)[ebp]
	cdq
	idiv ebx
	imul ebx,dword ptr (-12)[ebp],31
	imul ebx,ebx,88
	lea ebx,[ebx][edx]
	sub ebx,dword ptr (-56)[ebp]
	mov edx,dword ptr (-96)[ebp]
	mov ecx,ebx
	sal edx,cl
	mov ebx,dword ptr (-20)[ebp]
	lea ebx,(11)[ebx]
	cmp edx,ebx
	jge L18
	mov dword ptr (-52)[ebp],1
	jmp L19
	L18:
	mov dword ptr (-52)[ebp],0
	L19:
	mov ebx,dword ptr (-4)[ebp]
	cmp ebx,0
	jne L24
	mov dword ptr (-64)[ebp],1
	jmp L25
	L24:
	mov dword ptr (-64)[ebp],0
	L25:
	mov edx,dword ptr (-8)[ebp]
	lea eax,[edx*4]
	mov ecx,dword ptr (-16)[ebp]
	cdq
	idiv ecx
	mov dword ptr (-100)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ecx,dword ptr (-28)[ebp]
	cdq
	idiv ecx
	imul ecx,dword ptr (-12)[ebp],31
	imul ecx,ecx,88
	lea edx,[ecx][edx]
	sub edx,dword ptr (-64)[ebp]
	mov ecx,dword ptr (-100)[ebp]
	mov ecx,edx
	sal ecx,cl
	mov edx,dword ptr (-20)[ebp]
	lea edx,(11)[edx]
	cmp ecx,edx
	jge L22
	mov dword ptr (-60)[ebp],1
	jmp L23
	L22:
	mov dword ptr (-60)[ebp],0
	L23:
	mov edx,dword ptr (-4)[ebp]
	mov dword ptr (-104)[ebp],edx
	cmp edx,0
	jne L28
	mov dword ptr (-72)[ebp],1
	jmp L29
	L28:
	mov dword ptr (-72)[ebp],0
	L29:
	mov ecx,dword ptr (-8)[ebp]
	lea eax,[ecx*4]
	mov ecx,dword ptr (-16)[ebp]
	cdq
	idiv ecx
	mov dword ptr (-108)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ecx,dword ptr (-28)[ebp]
	cdq
	idiv ecx
	imul ecx,dword ptr (-12)[ebp],31
	imul ecx,ecx,88
	lea edx,[ecx][edx]
	sub edx,dword ptr (-72)[ebp]
	mov ecx,dword ptr (-108)[ebp]
	mov ecx,edx
	sal ecx,cl
	mov edx,dword ptr (-20)[ebp]
	lea edx,(11)[edx]
	cmp ecx,edx
	jge L26
	mov dword ptr (-68)[ebp],1
	jmp L27
	L26:
	mov dword ptr (-68)[ebp],0
	L27:
	mov edx,dword ptr (-4)[ebp]
	mov dword ptr (-112)[ebp],edx
	cmp edx,0
	jne L32
	mov dword ptr (-80)[ebp],1
	jmp L33
	L32:
	mov dword ptr (-80)[ebp],0
	L33:
	mov ecx,dword ptr (-8)[ebp]
	lea eax,[ecx*4]
	mov ecx,dword ptr (-16)[ebp]
	cdq
	idiv ecx
	mov dword ptr (-116)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ecx,dword ptr (-28)[ebp]
	cdq
	idiv ecx
	imul ecx,dword ptr (-12)[ebp],31
	imul ecx,ecx,88
	lea edx,[ecx][edx]
	sub edx,dword ptr (-80)[ebp]
	mov ecx,dword ptr (-116)[ebp]
	mov ecx,edx
	sal ecx,cl
	mov edx,dword ptr (-20)[ebp]
	lea edx,(11)[edx]
	cmp ecx,edx
	jge L30
	mov dword ptr (-76)[ebp],1
	jmp L31
	L30:
	mov dword ptr (-76)[ebp],0
	L31:
	mov edx,dword ptr (-4)[ebp]
	mov dword ptr (-120)[ebp],edx
	cmp edx,0
	jne L36
	mov dword ptr (-88)[ebp],1
	jmp L37
	L36:
	mov dword ptr (-88)[ebp],0
	L37:
	mov ecx,dword ptr (-8)[ebp]
	lea eax,[ecx*4]
	mov ecx,dword ptr (-16)[ebp]
	cdq
	idiv ecx
	mov dword ptr (-124)[ebp],edx
	mov eax,dword ptr (-24)[ebp]
	mov ecx,dword ptr (-28)[ebp]
	cdq
	idiv ecx
	imul ecx,dword ptr (-12)[ebp],31
	imul ecx,ecx,88
	lea edx,[ecx][edx]
	sub edx,dword ptr (-88)[ebp]
	mov ecx,dword ptr (-124)[ebp]
	mov ecx,edx
	sal ecx,cl
	mov edx,dword ptr (-20)[ebp]
	lea edx,(11)[edx]
	cmp ecx,edx
	jge L34
	mov dword ptr (-84)[ebp],1
	jmp L35
	L34:
	mov dword ptr (-84)[ebp],0
	L35:
	not edi
	or edi,dword ptr (-44)[ebp]
	imul edi,edi,4243
	not esi
	or esi,dword ptr (-52)[ebp]
	imul edi,esi
	mov esi,dword ptr (-32)[ebp]
	lea edi,[esi][edi]
	mov esi,dword ptr (-36)[ebp]
	sal esi,5
	imul esi,ebx
	mov ecx,esi
	sal edi,cl
	mov esi,3
	not ebx
	or ebx,dword ptr (-60)[ebp]
	mov edx,dword ptr (-104)[ebp]
	not edx
	or edx,dword ptr (-68)[ebp]
	imul ebx,edx
	sub esi,ebx
	and edi,esi
	mov esi,dword ptr (-112)[ebp]
	not esi
	or esi,dword ptr (-76)[ebp]
	mov ebx,dword ptr (-120)[ebp]
	not ebx
	or ebx,dword ptr (-84)[ebp]
	lea esi,[ebx][esi]
	and edi,esi
	mov dword ptr (-40)[ebp],edi

 ( 237 lines of code, but LCC does CSE )
//====================================================================================

	b1 = f1 == f2;
 D9 45 8C         fld         dword ptr [f1] 
 D9 45 88         fld         dword ptr [f2] 
 DA E9            fucompp          
 DF E0            fnstsw      ax   
 F6 C4 44         test        ah,44h 
 7A 0C            jp          main+0CAh (427C2Ah) 
 C7 85 20 FF FF FF 01 00 00 00 mov         dword ptr [ebp-0E0h],1 
 EB 0A            jmp         main+0D4h (427C34h) 
 C7 85 20 FF FF FF 00 00 00 00 mov         dword ptr [ebp-0E0h],0 
 8A 85 20 FF FF FF mov         al,byte ptr [ebp-0E0h] 
 88 85 67 FF FF FF mov         byte ptr [b1],al 
 ( 11 )
//====================================================================================
i = a ? a : b;
 83 7D FC 00      cmp         dword ptr [a],0 
 74 0B            je          main+0C0h (427C20h) 
 8B 45 FC         mov         eax,dword ptr [a] 
 89 85 08 FF FF FF mov         dword ptr [ebp-0F8h],eax 
 EB 09            jmp         main+0C9h (427C29h) 
 8B 4D F8         mov         ecx,dword ptr [b] 
 89 8D 08 FF FF FF mov         dword ptr [ebp-0F8h],ecx 
 8B 95 08 FF FF FF mov         edx,dword ptr [ebp-0F8h] 
 89 55 DC         mov         dword ptr [i],edx 
	b2 = (s3 > i );
 0F BF 85 5C FF FF FF movsx       eax,word ptr [s3] 
 33 C9            xor         ecx,ecx 
 3B 45 DC         cmp         eax,dword ptr [i] 
 0F 9F C1         setg        cl   
 88 8D 4E FF FF FF mov         byte ptr [b2],cl 
 
//====================================================================================
//====================================================================================
//====================================================================================
//====================================================================================
//====================================================================================
//====================================================================================
//====================================================================================	  




















